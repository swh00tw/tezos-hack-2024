"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tzkt";
exports.ids = ["vendor-chunks/@tzkt"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tzkt/oazapfts/lib/module/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tzkt/oazapfts/lib/module/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpError: () => (/* binding */ HttpError),\n/* harmony export */   SUCCESS_CODES: () => (/* binding */ SUCCESS_CODES),\n/* harmony export */   handle: () => (/* binding */ handle),\n/* harmony export */   ok: () => (/* binding */ ok),\n/* harmony export */   okify: () => (/* binding */ okify),\n/* harmony export */   optimistic: () => (/* binding */ optimistic)\n/* harmony export */ });\n/**\n * Utility function to handle different status codes.\n *\n * Example:\n *\n * const userId = await handle(api.register({ email, password }), {\n *   200: (user: User) => user.id,\n *   400: (err: string) => console.log(err),\n * })\n **/ async function handle(promise, handler) {\n    const { status, data } = await promise;\n    const statusHandler = handler[status];\n    if (statusHandler) return statusHandler(data);\n    if (handler.default) return handler.default(status, data);\n    throw new HttpError(status, data);\n}\nconst SUCCESS_CODES = [\n    200,\n    201,\n    202,\n    204\n];\n/**\n * Utility function to directly return any successful response\n * and throw a HttpError otherwise.\n *\n * Example:\n *\n * try {\n *   const userId = await ok(api.register({ email, password }));\n * }\n * catch (err) {\n *   console.log(err.status)\n * }\n */ async function ok(promise) {\n    const res = await promise;\n    if (SUCCESS_CODES.some((s)=>s == res.status)) return res.data;\n    throw new HttpError(res.status, res.data);\n}\n/**\n * Utility function to wrap an API function with `ok(...)`.\n */ function okify(fn) {\n    return (...args)=>ok(fn(...args));\n}\n/**\n * Utility to `okify` each function of an API.\n */ function optimistic(api) {\n    const okApi = {};\n    Object.entries(api).forEach(([key, value])=>{\n        okApi[key] = typeof value === \"function\" ? okify(value) : value;\n    });\n    return okApi;\n}\nclass HttpError extends Error {\n    constructor(status, data){\n        super(`Error: ${status}`);\n        this.status = status;\n        this.data = data;\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7O0VBU0UsR0FDSyxlQUFlQSxPQUFPQyxPQUFPLEVBQUVDLE9BQU87SUFDekMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHLE1BQU1IO0lBQy9CLE1BQU1JLGdCQUFnQkgsT0FBTyxDQUFDQyxPQUFPO0lBQ3JDLElBQUlFLGVBQ0EsT0FBT0EsY0FBY0Q7SUFDekIsSUFBSUYsUUFBUUksT0FBTyxFQUNmLE9BQU9KLFFBQVFJLE9BQU8sQ0FBQ0gsUUFBUUM7SUFDbkMsTUFBTSxJQUFJRyxVQUFVSixRQUFRQztBQUNoQztBQUNPLE1BQU1JLGdCQUFnQjtJQUFDO0lBQUs7SUFBSztJQUFLO0NBQUksQ0FBQztBQUNsRDs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxlQUFlQyxHQUFHUixPQUFPO0lBQzVCLE1BQU1TLE1BQU0sTUFBTVQ7SUFDbEIsSUFBSU8sY0FBY0csSUFBSSxDQUFDLENBQUNDLElBQU1BLEtBQUtGLElBQUlQLE1BQU0sR0FDekMsT0FBT08sSUFBSU4sSUFBSTtJQUNuQixNQUFNLElBQUlHLFVBQVVHLElBQUlQLE1BQU0sRUFBRU8sSUFBSU4sSUFBSTtBQUM1QztBQUNBOztDQUVDLEdBQ00sU0FBU1MsTUFBTUMsRUFBRTtJQUNwQixPQUFPLENBQUMsR0FBR0MsT0FBU04sR0FBR0ssTUFBTUM7QUFDakM7QUFDQTs7Q0FFQyxHQUNNLFNBQVNDLFdBQVdDLEdBQUc7SUFDMUIsTUFBTUMsUUFBUSxDQUFDO0lBQ2ZDLE9BQU9DLE9BQU8sQ0FBQ0gsS0FBS0ksT0FBTyxDQUFDLENBQUMsQ0FBQ0MsS0FBS0MsTUFBTTtRQUNyQ0wsS0FBSyxDQUFDSSxJQUFJLEdBQUcsT0FBT0MsVUFBVSxhQUFhVixNQUFNVSxTQUFTQTtJQUM5RDtJQUNBLE9BQU9MO0FBQ1g7QUFDTyxNQUFNWCxrQkFBa0JpQjtJQUczQkMsWUFBWXRCLE1BQU0sRUFBRUMsSUFBSSxDQUFFO1FBQ3RCLEtBQUssQ0FBQyxDQUFDLE9BQU8sRUFBRUQsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtJQUNoQjtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHdycGVya3MvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9pbmRleC5qcz8zZmUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiB0byBoYW5kbGUgZGlmZmVyZW50IHN0YXR1cyBjb2Rlcy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGNvbnN0IHVzZXJJZCA9IGF3YWl0IGhhbmRsZShhcGkucmVnaXN0ZXIoeyBlbWFpbCwgcGFzc3dvcmQgfSksIHtcbiAqICAgMjAwOiAodXNlcjogVXNlcikgPT4gdXNlci5pZCxcbiAqICAgNDAwOiAoZXJyOiBzdHJpbmcpID0+IGNvbnNvbGUubG9nKGVyciksXG4gKiB9KVxuICoqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZShwcm9taXNlLCBoYW5kbGVyKSB7XG4gICAgY29uc3QgeyBzdGF0dXMsIGRhdGEgfSA9IGF3YWl0IHByb21pc2U7XG4gICAgY29uc3Qgc3RhdHVzSGFuZGxlciA9IGhhbmRsZXJbc3RhdHVzXTtcbiAgICBpZiAoc3RhdHVzSGFuZGxlcilcbiAgICAgICAgcmV0dXJuIHN0YXR1c0hhbmRsZXIoZGF0YSk7XG4gICAgaWYgKGhhbmRsZXIuZGVmYXVsdClcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIuZGVmYXVsdChzdGF0dXMsIGRhdGEpO1xuICAgIHRocm93IG5ldyBIdHRwRXJyb3Ioc3RhdHVzLCBkYXRhKTtcbn1cbmV4cG9ydCBjb25zdCBTVUNDRVNTX0NPREVTID0gWzIwMCwgMjAxLCAyMDIsIDIwNF07XG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gdG8gZGlyZWN0bHkgcmV0dXJuIGFueSBzdWNjZXNzZnVsIHJlc3BvbnNlXG4gKiBhbmQgdGhyb3cgYSBIdHRwRXJyb3Igb3RoZXJ3aXNlLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogdHJ5IHtcbiAqICAgY29uc3QgdXNlcklkID0gYXdhaXQgb2soYXBpLnJlZ2lzdGVyKHsgZW1haWwsIHBhc3N3b3JkIH0pKTtcbiAqIH1cbiAqIGNhdGNoIChlcnIpIHtcbiAqICAgY29uc29sZS5sb2coZXJyLnN0YXR1cylcbiAqIH1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG9rKHByb21pc2UpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBwcm9taXNlO1xuICAgIGlmIChTVUNDRVNTX0NPREVTLnNvbWUoKHMpID0+IHMgPT0gcmVzLnN0YXR1cykpXG4gICAgICAgIHJldHVybiByZXMuZGF0YTtcbiAgICB0aHJvdyBuZXcgSHR0cEVycm9yKHJlcy5zdGF0dXMsIHJlcy5kYXRhKTtcbn1cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiB0byB3cmFwIGFuIEFQSSBmdW5jdGlvbiB3aXRoIGBvayguLi4pYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9raWZ5KGZuKSB7XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBvayhmbiguLi5hcmdzKSk7XG59XG4vKipcbiAqIFV0aWxpdHkgdG8gYG9raWZ5YCBlYWNoIGZ1bmN0aW9uIG9mIGFuIEFQSS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9wdGltaXN0aWMoYXBpKSB7XG4gICAgY29uc3Qgb2tBcGkgPSB7fTtcbiAgICBPYmplY3QuZW50cmllcyhhcGkpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBva0FwaVtrZXldID0gdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBva2lmeSh2YWx1ZSkgOiB2YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gb2tBcGk7XG59XG5leHBvcnQgY2xhc3MgSHR0cEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIHN0YXR1cztcbiAgICBkYXRhO1xuICAgIGNvbnN0cnVjdG9yKHN0YXR1cywgZGF0YSkge1xuICAgICAgICBzdXBlcihgRXJyb3I6ICR7c3RhdHVzfWApO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiaGFuZGxlIiwicHJvbWlzZSIsImhhbmRsZXIiLCJzdGF0dXMiLCJkYXRhIiwic3RhdHVzSGFuZGxlciIsImRlZmF1bHQiLCJIdHRwRXJyb3IiLCJTVUNDRVNTX0NPREVTIiwib2siLCJyZXMiLCJzb21lIiwicyIsIm9raWZ5IiwiZm4iLCJhcmdzIiwib3B0aW1pc3RpYyIsImFwaSIsIm9rQXBpIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJrZXkiLCJ2YWx1ZSIsIkVycm9yIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/oazapfts/lib/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tzkt/oazapfts/lib/module/runtime/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/query.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/util.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/index.js\");\n\n\n\nfunction runtime(defaults) {\n    async function fetchText(url, req) {\n        const res = await doFetch(url, req);\n        let data;\n        try {\n            data = await res.text();\n        } catch (err) {}\n        return {\n            status: res.status,\n            headers: res.headers,\n            contentType: res.headers.get(\"content-type\"),\n            data\n        };\n    }\n    async function fetchJson(url, req = {}) {\n        const { status, headers, contentType, data } = await fetchText(url, {\n            ...req,\n            headers: {\n                Accept: \"application/json\",\n                ...req.headers\n            }\n        });\n        const isJson = contentType ? contentType.includes(\"json\") : false;\n        if (isJson) {\n            return {\n                status,\n                headers,\n                data: data ? JSON.parse(data) : null\n            };\n        }\n        return {\n            status,\n            headers,\n            data\n        };\n    }\n    async function fetchBlob(url, req = {}) {\n        const res = await doFetch(url, req);\n        let data;\n        try {\n            data = await res.blob();\n        } catch (err) {}\n        return {\n            status: res.status,\n            headers: res.headers,\n            data\n        };\n    }\n    async function doFetch(url, req = {}) {\n        const { baseUrl, headers, fetch: customFetch, ...init } = {\n            ...defaults,\n            ...req\n        };\n        const href = (0,_util__WEBPACK_IMPORTED_MODULE_1__.joinUrl)(baseUrl, url);\n        const res = await (customFetch || fetch)(href, {\n            ...init,\n            headers: (0,_util__WEBPACK_IMPORTED_MODULE_1__.stripUndefined)({\n                ...defaults.headers,\n                ...headers\n            })\n        });\n        return res;\n    }\n    return {\n        ok: ___WEBPACK_IMPORTED_MODULE_2__.ok,\n        fetchText,\n        fetchJson,\n        fetchBlob,\n        json ({ body, headers, ...req }) {\n            return {\n                ...req,\n                ...body != null && {\n                    body: JSON.stringify(body)\n                },\n                headers: {\n                    ...headers,\n                    \"Content-Type\": \"application/json\"\n                }\n            };\n        },\n        form ({ body, headers, ...req }) {\n            return {\n                ...req,\n                ...body != null && {\n                    body: _query__WEBPACK_IMPORTED_MODULE_0__.form(body)\n                },\n                headers: {\n                    ...headers,\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            };\n        },\n        multipart ({ body, ...req }) {\n            if (body == null) return req;\n            const data = new (defaults.formDataConstructor || req.formDataConstructor || FormData)();\n            Object.entries(body).forEach(([name, value])=>{\n                data.append(name, value);\n            });\n            return {\n                ...req,\n                body: data\n            };\n        }\n    };\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9ydW50aW1lL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEI7QUFDbUI7QUFDeEI7QUFDbEIsU0FBU0ksUUFBUUMsUUFBUTtJQUM1QixlQUFlQyxVQUFVQyxHQUFHLEVBQUVDLEdBQUc7UUFDN0IsTUFBTUMsTUFBTSxNQUFNQyxRQUFRSCxLQUFLQztRQUMvQixJQUFJRztRQUNKLElBQUk7WUFDQUEsT0FBTyxNQUFNRixJQUFJRyxJQUFJO1FBQ3pCLEVBQ0EsT0FBT0MsS0FBSyxDQUFFO1FBQ2QsT0FBTztZQUNIQyxRQUFRTCxJQUFJSyxNQUFNO1lBQ2xCQyxTQUFTTixJQUFJTSxPQUFPO1lBQ3BCQyxhQUFhUCxJQUFJTSxPQUFPLENBQUNFLEdBQUcsQ0FBQztZQUM3Qk47UUFDSjtJQUNKO0lBQ0EsZUFBZU8sVUFBVVgsR0FBRyxFQUFFQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxNQUFNLEVBQUVNLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEVBQUVMLElBQUksRUFBRSxHQUFHLE1BQU1MLFVBQVVDLEtBQUs7WUFDaEUsR0FBR0MsR0FBRztZQUNOTyxTQUFTO2dCQUNMSSxRQUFRO2dCQUNSLEdBQUdYLElBQUlPLE9BQU87WUFDbEI7UUFDSjtRQUNBLE1BQU1LLFNBQVNKLGNBQWNBLFlBQVlLLFFBQVEsQ0FBQyxVQUFVO1FBQzVELElBQUlELFFBQVE7WUFDUixPQUFPO2dCQUNITjtnQkFDQUM7Z0JBQ0FKLE1BQU1BLE9BQU9XLEtBQUtDLEtBQUssQ0FBQ1osUUFBUTtZQUNwQztRQUNKO1FBQ0EsT0FBTztZQUFFRztZQUFRQztZQUFTSjtRQUFLO0lBQ25DO0lBQ0EsZUFBZWEsVUFBVWpCLEdBQUcsRUFBRUMsTUFBTSxDQUFDLENBQUM7UUFDbEMsTUFBTUMsTUFBTSxNQUFNQyxRQUFRSCxLQUFLQztRQUMvQixJQUFJRztRQUNKLElBQUk7WUFDQUEsT0FBTyxNQUFNRixJQUFJZ0IsSUFBSTtRQUN6QixFQUNBLE9BQU9aLEtBQUssQ0FBRTtRQUNkLE9BQU87WUFBRUMsUUFBUUwsSUFBSUssTUFBTTtZQUFFQyxTQUFTTixJQUFJTSxPQUFPO1lBQUVKO1FBQUs7SUFDNUQ7SUFDQSxlQUFlRCxRQUFRSCxHQUFHLEVBQUVDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sRUFBRWtCLE9BQU8sRUFBRVgsT0FBTyxFQUFFWSxPQUFPQyxXQUFXLEVBQUUsR0FBR0MsTUFBTSxHQUFHO1lBQ3RELEdBQUd4QixRQUFRO1lBQ1gsR0FBR0csR0FBRztRQUNWO1FBQ0EsTUFBTXNCLE9BQU83Qiw4Q0FBT0EsQ0FBQ3lCLFNBQVNuQjtRQUM5QixNQUFNRSxNQUFNLE1BQU0sQ0FBQ21CLGVBQWVELEtBQUksRUFBR0csTUFBTTtZQUMzQyxHQUFHRCxJQUFJO1lBQ1BkLFNBQVNiLHFEQUFjQSxDQUFDO2dCQUFFLEdBQUdHLFNBQVNVLE9BQU87Z0JBQUUsR0FBR0EsT0FBTztZQUFDO1FBQzlEO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU87UUFDSE4sRUFBRUEsbUNBQUFBO1FBQ0ZHO1FBQ0FZO1FBQ0FNO1FBQ0FPLE1BQUssRUFBRUMsSUFBSSxFQUFFakIsT0FBTyxFQUFFLEdBQUdQLEtBQUs7WUFDMUIsT0FBTztnQkFDSCxHQUFHQSxHQUFHO2dCQUNOLEdBQUl3QixRQUFRLFFBQVE7b0JBQUVBLE1BQU1WLEtBQUtXLFNBQVMsQ0FBQ0Q7Z0JBQU0sQ0FBQztnQkFDbERqQixTQUFTO29CQUNMLEdBQUdBLE9BQU87b0JBQ1YsZ0JBQWdCO2dCQUNwQjtZQUNKO1FBQ0o7UUFDQW1CLE1BQUssRUFBRUYsSUFBSSxFQUFFakIsT0FBTyxFQUFFLEdBQUdQLEtBQUs7WUFDMUIsT0FBTztnQkFDSCxHQUFHQSxHQUFHO2dCQUNOLEdBQUl3QixRQUFRLFFBQVE7b0JBQUVBLE1BQU1oQyx3Q0FBTyxDQUFDZ0M7Z0JBQU0sQ0FBQztnQkFDM0NqQixTQUFTO29CQUNMLEdBQUdBLE9BQU87b0JBQ1YsZ0JBQWdCO2dCQUNwQjtZQUNKO1FBQ0o7UUFDQW9CLFdBQVUsRUFBRUgsSUFBSSxFQUFFLEdBQUd4QixLQUFLO1lBQ3RCLElBQUl3QixRQUFRLE1BQ1IsT0FBT3hCO1lBQ1gsTUFBTUcsT0FBTyxJQUFLTixDQUFBQSxTQUFTK0IsbUJBQW1CLElBQzFDNUIsSUFBSTRCLG1CQUFtQixJQUN2QkMsUUFBTztZQUNYQyxPQUFPQyxPQUFPLENBQUNQLE1BQU1RLE9BQU8sQ0FBQyxDQUFDLENBQUNDLE1BQU1DLE1BQU07Z0JBQ3ZDL0IsS0FBS2dDLE1BQU0sQ0FBQ0YsTUFBTUM7WUFDdEI7WUFDQSxPQUFPO2dCQUNILEdBQUdsQyxHQUFHO2dCQUNOd0IsTUFBTXJCO1lBQ1Y7UUFDSjtJQUNKO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wd3JwZXJrcy8uL25vZGVfbW9kdWxlcy9AdHprdC9vYXphcGZ0cy9saWIvbW9kdWxlL3J1bnRpbWUvaW5kZXguanM/ZjkwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBxcyBmcm9tIFwiLi9xdWVyeVwiO1xuaW1wb3J0IHsgam9pblVybCwgc3RyaXBVbmRlZmluZWQgfSBmcm9tIFwiLi91dGlsXCI7XG5pbXBvcnQgeyBvayB9IGZyb20gXCIuLi9cIjtcbmV4cG9ydCBmdW5jdGlvbiBydW50aW1lKGRlZmF1bHRzKSB7XG4gICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hUZXh0KHVybCwgcmVxKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGRvRmV0Y2godXJsLCByZXEpO1xuICAgICAgICBsZXQgZGF0YTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGRhdGEgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHsgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzLFxuICAgICAgICAgICAgaGVhZGVyczogcmVzLmhlYWRlcnMsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogcmVzLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hKc29uKHVybCwgcmVxID0ge30pIHtcbiAgICAgICAgY29uc3QgeyBzdGF0dXMsIGhlYWRlcnMsIGNvbnRlbnRUeXBlLCBkYXRhIH0gPSBhd2FpdCBmZXRjaFRleHQodXJsLCB7XG4gICAgICAgICAgICAuLi5yZXEsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICAuLi5yZXEuaGVhZGVycyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBpc0pzb24gPSBjb250ZW50VHlwZSA/IGNvbnRlbnRUeXBlLmluY2x1ZGVzKFwianNvblwiKSA6IGZhbHNlO1xuICAgICAgICBpZiAoaXNKc29uKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzLFxuICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEgPyBKU09OLnBhcnNlKGRhdGEpIDogbnVsbCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzLCBoZWFkZXJzLCBkYXRhIH07XG4gICAgfVxuICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoQmxvYih1cmwsIHJlcSA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGRvRmV0Y2godXJsLCByZXEpO1xuICAgICAgICBsZXQgZGF0YTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGRhdGEgPSBhd2FpdCByZXMuYmxvYigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHsgfVxuICAgICAgICByZXR1cm4geyBzdGF0dXM6IHJlcy5zdGF0dXMsIGhlYWRlcnM6IHJlcy5oZWFkZXJzLCBkYXRhIH07XG4gICAgfVxuICAgIGFzeW5jIGZ1bmN0aW9uIGRvRmV0Y2godXJsLCByZXEgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGJhc2VVcmwsIGhlYWRlcnMsIGZldGNoOiBjdXN0b21GZXRjaCwgLi4uaW5pdCB9ID0ge1xuICAgICAgICAgICAgLi4uZGVmYXVsdHMsXG4gICAgICAgICAgICAuLi5yZXEsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhyZWYgPSBqb2luVXJsKGJhc2VVcmwsIHVybCk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IChjdXN0b21GZXRjaCB8fCBmZXRjaCkoaHJlZiwge1xuICAgICAgICAgICAgLi4uaW5pdCxcbiAgICAgICAgICAgIGhlYWRlcnM6IHN0cmlwVW5kZWZpbmVkKHsgLi4uZGVmYXVsdHMuaGVhZGVycywgLi4uaGVhZGVycyB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG9rLFxuICAgICAgICBmZXRjaFRleHQsXG4gICAgICAgIGZldGNoSnNvbixcbiAgICAgICAgZmV0Y2hCbG9iLFxuICAgICAgICBqc29uKHsgYm9keSwgaGVhZGVycywgLi4ucmVxIH0pIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ucmVxLFxuICAgICAgICAgICAgICAgIC4uLihib2R5ICE9IG51bGwgJiYgeyBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSB9KSxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBmb3JtKHsgYm9keSwgaGVhZGVycywgLi4ucmVxIH0pIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ucmVxLFxuICAgICAgICAgICAgICAgIC4uLihib2R5ICE9IG51bGwgJiYgeyBib2R5OiBxcy5mb3JtKGJvZHkpIH0pLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgbXVsdGlwYXJ0KHsgYm9keSwgLi4ucmVxIH0pIHtcbiAgICAgICAgICAgIGlmIChib2R5ID09IG51bGwpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBuZXcgKGRlZmF1bHRzLmZvcm1EYXRhQ29uc3RydWN0b3IgfHxcbiAgICAgICAgICAgICAgICByZXEuZm9ybURhdGFDb25zdHJ1Y3RvciB8fFxuICAgICAgICAgICAgICAgIEZvcm1EYXRhKSgpO1xuICAgICAgICAgICAgT2JqZWN0LmVudHJpZXMoYm9keSkuZm9yRWFjaCgoW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5yZXEsXG4gICAgICAgICAgICAgICAgYm9keTogZGF0YSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJxcyIsImpvaW5VcmwiLCJzdHJpcFVuZGVmaW5lZCIsIm9rIiwicnVudGltZSIsImRlZmF1bHRzIiwiZmV0Y2hUZXh0IiwidXJsIiwicmVxIiwicmVzIiwiZG9GZXRjaCIsImRhdGEiLCJ0ZXh0IiwiZXJyIiwic3RhdHVzIiwiaGVhZGVycyIsImNvbnRlbnRUeXBlIiwiZ2V0IiwiZmV0Y2hKc29uIiwiQWNjZXB0IiwiaXNKc29uIiwiaW5jbHVkZXMiLCJKU09OIiwicGFyc2UiLCJmZXRjaEJsb2IiLCJibG9iIiwiYmFzZVVybCIsImZldGNoIiwiY3VzdG9tRmV0Y2giLCJpbml0IiwiaHJlZiIsImpzb24iLCJib2R5Iiwic3RyaW5naWZ5IiwiZm9ybSIsIm11bHRpcGFydCIsImZvcm1EYXRhQ29uc3RydWN0b3IiLCJGb3JtRGF0YSIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwiYXBwZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/query.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tzkt/oazapfts/lib/module/runtime/query.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deep: () => (/* binding */ deep),\n/* harmony export */   explode: () => (/* binding */ explode),\n/* harmony export */   form: () => (/* binding */ form),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   pipe: () => (/* binding */ pipe),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   space: () => (/* binding */ space)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/util.js\");\n\n/**\n * Join params using an ampersand and prepends a questionmark if not empty.\n */ function query(...params) {\n    const s = params.filter(Boolean).join(\"&\");\n    return s && `?${s}`;\n}\n/**\n * Serializes nested objects according to the `deepObject` style specified in\n * https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md#style-values\n */ function deep(params, [k, v] = _util__WEBPACK_IMPORTED_MODULE_0__.encodeReserved) {\n    const qk = (0,_util__WEBPACK_IMPORTED_MODULE_0__.encode)([\n        (s)=>s,\n        k\n    ]);\n    const qv = (0,_util__WEBPACK_IMPORTED_MODULE_0__.encode)([\n        (s)=>s,\n        v\n    ]);\n    // don't add index to arrays\n    // https://github.com/expressjs/body-parser/issues/289\n    const visit = (obj, prefix = \"\")=>Object.entries(obj).filter(([, v])=>v !== undefined).map(([prop, v])=>{\n            const index = Array.isArray(obj) ? \"\" : prop;\n            const key = prefix ? qk`${prefix}[${index}]` : prop;\n            if (typeof v === \"object\") {\n                return visit(v, key);\n            }\n            return qv`${key}=${v}`;\n        }).join(\"&\");\n    return visit(params);\n}\n/**\n * Property values of type array or object generate separate parameters\n * for each value of the array, or key-value-pair of the map.\n * For other types of properties this property has no effect.\n * See https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md#encoding-object\n */ function explode(params, encoders = _util__WEBPACK_IMPORTED_MODULE_0__.encodeReserved) {\n    const q = (0,_util__WEBPACK_IMPORTED_MODULE_0__.encode)(encoders);\n    return Object.entries(params).filter(([, value])=>value !== undefined).map(([name, value])=>{\n        if (Array.isArray(value)) {\n            return value.map((v)=>q`${name}=${v}`).join(\"&\");\n        }\n        if (typeof value === \"object\") {\n            return explode(value, encoders);\n        }\n        return q`${name}=${value}`;\n    }).join(\"&\");\n}\nfunction json(params, encoders = _util__WEBPACK_IMPORTED_MODULE_0__.encodeReserved) {\n    const q = (0,_util__WEBPACK_IMPORTED_MODULE_0__.encode)(encoders);\n    return Object.entries(params).filter(([, value])=>value !== undefined).map(([name, value])=>{\n        const v = JSON.stringify(value);\n        return q`${name}=${v}`;\n    }).join(\"&\");\n}\nconst form = (0,_util__WEBPACK_IMPORTED_MODULE_0__.delimited)();\nconst pipe = (0,_util__WEBPACK_IMPORTED_MODULE_0__.delimited)(\"|\");\nconst space = (0,_util__WEBPACK_IMPORTED_MODULE_0__.delimited)(\"%20\"); //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9ydW50aW1lL3F1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTJEO0FBQzNEOztDQUVDLEdBQ00sU0FBU0csTUFBTSxHQUFHQyxNQUFNO0lBQzNCLE1BQU1DLElBQUlELE9BQU9FLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBQ3RDLE9BQU9ILEtBQUssQ0FBQyxDQUFDLEVBQUVBLEVBQUUsQ0FBQztBQUN2QjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNJLEtBQUtMLE1BQU0sRUFBRSxDQUFDTSxHQUFHQyxFQUFFLEdBQUdULGlEQUFjO0lBQ2hELE1BQU1VLEtBQUtaLDZDQUFNQSxDQUFDO1FBQUMsQ0FBQ0ssSUFBTUE7UUFBR0s7S0FBRTtJQUMvQixNQUFNRyxLQUFLYiw2Q0FBTUEsQ0FBQztRQUFDLENBQUNLLElBQU1BO1FBQUdNO0tBQUU7SUFDL0IsNEJBQTRCO0lBQzVCLHNEQUFzRDtJQUN0RCxNQUFNRyxRQUFRLENBQUNDLEtBQUtDLFNBQVMsRUFBRSxHQUFLQyxPQUFPQyxPQUFPLENBQUNILEtBQzlDVCxNQUFNLENBQUMsQ0FBQyxHQUFHSyxFQUFFLEdBQUtBLE1BQU1RLFdBQ3hCQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxNQUFNVixFQUFFO1lBQ2YsTUFBTVcsUUFBUUMsTUFBTUMsT0FBTyxDQUFDVCxPQUFPLEtBQUtNO1lBQ3hDLE1BQU1JLE1BQU1ULFNBQVNKLEVBQUcsQ0FBQyxFQUFFSSxPQUFPLENBQUMsRUFBRU0sTUFBTSxDQUFDLENBQUMsR0FBR0Q7WUFDaEQsSUFBSSxPQUFPVixNQUFNLFVBQVU7Z0JBQ3ZCLE9BQU9HLE1BQU1ILEdBQUdjO1lBQ3BCO1lBQ0EsT0FBT1osRUFBRyxDQUFDLEVBQUVZLElBQUksQ0FBQyxFQUFFZCxFQUFFLENBQUM7UUFDM0IsR0FDS0gsSUFBSSxDQUFDO0lBQ1YsT0FBT00sTUFBTVY7QUFDakI7QUFDQTs7Ozs7Q0FLQyxHQUNNLFNBQVNzQixRQUFRdEIsTUFBTSxFQUFFdUIsV0FBV3pCLGlEQUFjO0lBQ3JELE1BQU0wQixJQUFJNUIsNkNBQU1BLENBQUMyQjtJQUNqQixPQUFPVixPQUFPQyxPQUFPLENBQUNkLFFBQ2pCRSxNQUFNLENBQUMsQ0FBQyxHQUFHdUIsTUFBTSxHQUFLQSxVQUFVVixXQUNoQ0MsR0FBRyxDQUFDLENBQUMsQ0FBQ1UsTUFBTUQsTUFBTTtRQUNuQixJQUFJTixNQUFNQyxPQUFPLENBQUNLLFFBQVE7WUFDdEIsT0FBT0EsTUFBTVQsR0FBRyxDQUFDLENBQUNULElBQU1pQixDQUFFLENBQUMsRUFBRUUsS0FBSyxDQUFDLEVBQUVuQixFQUFFLENBQUMsRUFBRUgsSUFBSSxDQUFDO1FBQ25EO1FBQ0EsSUFBSSxPQUFPcUIsVUFBVSxVQUFVO1lBQzNCLE9BQU9ILFFBQVFHLE9BQU9GO1FBQzFCO1FBQ0EsT0FBT0MsQ0FBRSxDQUFDLEVBQUVFLEtBQUssQ0FBQyxFQUFFRCxNQUFNLENBQUM7SUFDL0IsR0FDS3JCLElBQUksQ0FBQztBQUNkO0FBQ08sU0FBU3VCLEtBQUszQixNQUFNLEVBQUV1QixXQUFXekIsaURBQWM7SUFDbEQsTUFBTTBCLElBQUk1Qiw2Q0FBTUEsQ0FBQzJCO0lBQ2pCLE9BQU9WLE9BQU9DLE9BQU8sQ0FBQ2QsUUFDakJFLE1BQU0sQ0FBQyxDQUFDLEdBQUd1QixNQUFNLEdBQUtBLFVBQVVWLFdBQ2hDQyxHQUFHLENBQUMsQ0FBQyxDQUFDVSxNQUFNRCxNQUFNO1FBQ25CLE1BQU1sQixJQUFJcUIsS0FBS0MsU0FBUyxDQUFDSjtRQUN6QixPQUFPRCxDQUFFLENBQUMsRUFBRUUsS0FBSyxDQUFDLEVBQUVuQixFQUFFLENBQUM7SUFDM0IsR0FDS0gsSUFBSSxDQUFDO0FBQ2Q7QUFDTyxNQUFNMEIsT0FBT2pDLGdEQUFTQSxHQUFHO0FBQ3pCLE1BQU1rQyxPQUFPbEMsZ0RBQVNBLENBQUMsS0FBSztBQUM1QixNQUFNbUMsUUFBUW5DLGdEQUFTQSxDQUFDLE9BQU8sQ0FDdEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHdycGVya3MvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9ydW50aW1lL3F1ZXJ5LmpzPzk5OWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlLCBkZWxpbWl0ZWQsIGVuY29kZVJlc2VydmVkIH0gZnJvbSBcIi4vdXRpbFwiO1xuLyoqXG4gKiBKb2luIHBhcmFtcyB1c2luZyBhbiBhbXBlcnNhbmQgYW5kIHByZXBlbmRzIGEgcXVlc3Rpb25tYXJrIGlmIG5vdCBlbXB0eS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5KC4uLnBhcmFtcykge1xuICAgIGNvbnN0IHMgPSBwYXJhbXMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCImXCIpO1xuICAgIHJldHVybiBzICYmIGA/JHtzfWA7XG59XG4vKipcbiAqIFNlcmlhbGl6ZXMgbmVzdGVkIG9iamVjdHMgYWNjb3JkaW5nIHRvIHRoZSBgZGVlcE9iamVjdGAgc3R5bGUgc3BlY2lmaWVkIGluXG4gKiBodHRwczovL2dpdGh1Yi5jb20vT0FJL09wZW5BUEktU3BlY2lmaWNhdGlvbi9ibG9iL21haW4vdmVyc2lvbnMvMy4wLjAubWQjc3R5bGUtdmFsdWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWVwKHBhcmFtcywgW2ssIHZdID0gZW5jb2RlUmVzZXJ2ZWQpIHtcbiAgICBjb25zdCBxayA9IGVuY29kZShbKHMpID0+IHMsIGtdKTtcbiAgICBjb25zdCBxdiA9IGVuY29kZShbKHMpID0+IHMsIHZdKTtcbiAgICAvLyBkb24ndCBhZGQgaW5kZXggdG8gYXJyYXlzXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2V4cHJlc3Nqcy9ib2R5LXBhcnNlci9pc3N1ZXMvMjg5XG4gICAgY29uc3QgdmlzaXQgPSAob2JqLCBwcmVmaXggPSBcIlwiKSA9PiBPYmplY3QuZW50cmllcyhvYmopXG4gICAgICAgIC5maWx0ZXIoKFssIHZdKSA9PiB2ICE9PSB1bmRlZmluZWQpXG4gICAgICAgIC5tYXAoKFtwcm9wLCB2XSkgPT4ge1xuICAgICAgICBjb25zdCBpbmRleCA9IEFycmF5LmlzQXJyYXkob2JqKSA/IFwiXCIgOiBwcm9wO1xuICAgICAgICBjb25zdCBrZXkgPSBwcmVmaXggPyBxayBgJHtwcmVmaXh9WyR7aW5kZXh9XWAgOiBwcm9wO1xuICAgICAgICBpZiAodHlwZW9mIHYgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2aXNpdCh2LCBrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBxdiBgJHtrZXl9PSR7dn1gO1xuICAgIH0pXG4gICAgICAgIC5qb2luKFwiJlwiKTtcbiAgICByZXR1cm4gdmlzaXQocGFyYW1zKTtcbn1cbi8qKlxuICogUHJvcGVydHkgdmFsdWVzIG9mIHR5cGUgYXJyYXkgb3Igb2JqZWN0IGdlbmVyYXRlIHNlcGFyYXRlIHBhcmFtZXRlcnNcbiAqIGZvciBlYWNoIHZhbHVlIG9mIHRoZSBhcnJheSwgb3Iga2V5LXZhbHVlLXBhaXIgb2YgdGhlIG1hcC5cbiAqIEZvciBvdGhlciB0eXBlcyBvZiBwcm9wZXJ0aWVzIHRoaXMgcHJvcGVydHkgaGFzIG5vIGVmZmVjdC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vT0FJL09wZW5BUEktU3BlY2lmaWNhdGlvbi9ibG9iL21haW4vdmVyc2lvbnMvMy4wLjAubWQjZW5jb2Rpbmctb2JqZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHBsb2RlKHBhcmFtcywgZW5jb2RlcnMgPSBlbmNvZGVSZXNlcnZlZCkge1xuICAgIGNvbnN0IHEgPSBlbmNvZGUoZW5jb2RlcnMpO1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhwYXJhbXMpXG4gICAgICAgIC5maWx0ZXIoKFssIHZhbHVlXSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5tYXAoKHYpID0+IHEgYCR7bmFtZX09JHt2fWApLmpvaW4oXCImXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHJldHVybiBleHBsb2RlKHZhbHVlLCBlbmNvZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHEgYCR7bmFtZX09JHt2YWx1ZX1gO1xuICAgIH0pXG4gICAgICAgIC5qb2luKFwiJlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqc29uKHBhcmFtcywgZW5jb2RlcnMgPSBlbmNvZGVSZXNlcnZlZCkge1xuICAgIGNvbnN0IHEgPSBlbmNvZGUoZW5jb2RlcnMpO1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhwYXJhbXMpXG4gICAgICAgIC5maWx0ZXIoKFssIHZhbHVlXSkgPT4gdmFsdWUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgICBjb25zdCB2ID0gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICByZXR1cm4gcSBgJHtuYW1lfT0ke3Z9YDtcbiAgICB9KVxuICAgICAgICAuam9pbihcIiZcIik7XG59XG5leHBvcnQgY29uc3QgZm9ybSA9IGRlbGltaXRlZCgpO1xuZXhwb3J0IGNvbnN0IHBpcGUgPSBkZWxpbWl0ZWQoXCJ8XCIpO1xuZXhwb3J0IGNvbnN0IHNwYWNlID0gZGVsaW1pdGVkKFwiJTIwXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnkuanMubWFwIl0sIm5hbWVzIjpbImVuY29kZSIsImRlbGltaXRlZCIsImVuY29kZVJlc2VydmVkIiwicXVlcnkiLCJwYXJhbXMiLCJzIiwiZmlsdGVyIiwiQm9vbGVhbiIsImpvaW4iLCJkZWVwIiwiayIsInYiLCJxayIsInF2IiwidmlzaXQiLCJvYmoiLCJwcmVmaXgiLCJPYmplY3QiLCJlbnRyaWVzIiwidW5kZWZpbmVkIiwibWFwIiwicHJvcCIsImluZGV4IiwiQXJyYXkiLCJpc0FycmF5Iiwia2V5IiwiZXhwbG9kZSIsImVuY29kZXJzIiwicSIsInZhbHVlIiwibmFtZSIsImpzb24iLCJKU09OIiwic3RyaW5naWZ5IiwiZm9ybSIsInBpcGUiLCJzcGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tzkt/oazapfts/lib/module/runtime/util.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allowReserved: () => (/* binding */ allowReserved),\n/* harmony export */   delimited: () => (/* binding */ delimited),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeReserved: () => (/* binding */ encodeReserved),\n/* harmony export */   joinUrl: () => (/* binding */ joinUrl),\n/* harmony export */   stripUndefined: () => (/* binding */ stripUndefined)\n/* harmony export */ });\n// Encode param names and values as URIComponent\nconst encodeReserved = [\n    encodeURIComponent,\n    encodeURIComponent\n];\nconst allowReserved = [\n    encodeURIComponent,\n    encodeURI\n];\n/**\n * Creates a tag-function to encode template strings with the given encoders.\n */ function encode(encoders, delimiter = \",\") {\n    const q = (v, i)=>{\n        const encoder = encoders[i % encoders.length];\n        if (typeof v === \"undefined\") {\n            return \"\";\n        }\n        if (typeof v === \"object\") {\n            if (Array.isArray(v)) {\n                return v.map(encoder).join(delimiter);\n            }\n            const flat = Object.entries(v).reduce((flat, entry)=>[\n                    ...flat,\n                    ...entry\n                ], []);\n            return flat.map(encoder).join(delimiter);\n        }\n        return encoder(String(v));\n    };\n    return (strings, ...values)=>{\n        return strings.reduce((prev, s, i)=>{\n            return `${prev}${s}${q(values[i], i)}`;\n        }, \"\");\n    };\n}\n/**\n * Separate array values by the given delimiter.\n */ function delimited(delimiter = \",\") {\n    return (params, encoders = encodeReserved)=>Object.entries(params).filter(([, value])=>value !== undefined).map(([name, value])=>encode(encoders, delimiter)`${name}=${value}`).join(\"&\");\n}\n/**\n * Deeply remove all properties with undefined values.\n */ function stripUndefined(obj) {\n    return obj && JSON.parse(JSON.stringify(obj));\n}\nfunction joinUrl(...parts) {\n    return parts.filter(Boolean).map((s, i)=>i === 0 ? s : s.replace(/^\\/+/, \"\")).map((s, i, a)=>i === a.length - 1 ? s : s.replace(/\\/+$/, \"\")).join(\"/\");\n} //# sourceMappingURL=util.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHR6a3Qvb2F6YXBmdHMvbGliL21vZHVsZS9ydW50aW1lL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsZ0RBQWdEO0FBQ3pDLE1BQU1BLGlCQUFpQjtJQUFDQztJQUFvQkE7Q0FBbUIsQ0FBQztBQUNoRSxNQUFNQyxnQkFBZ0I7SUFBQ0Q7SUFBb0JFO0NBQVUsQ0FBQztBQUM3RDs7Q0FFQyxHQUNNLFNBQVNDLE9BQU9DLFFBQVEsRUFBRUMsWUFBWSxHQUFHO0lBQzVDLE1BQU1DLElBQUksQ0FBQ0MsR0FBR0M7UUFDVixNQUFNQyxVQUFVTCxRQUFRLENBQUNJLElBQUlKLFNBQVNNLE1BQU0sQ0FBQztRQUM3QyxJQUFJLE9BQU9ILE1BQU0sYUFBYTtZQUMxQixPQUFPO1FBQ1g7UUFDQSxJQUFJLE9BQU9BLE1BQU0sVUFBVTtZQUN2QixJQUFJSSxNQUFNQyxPQUFPLENBQUNMLElBQUk7Z0JBQ2xCLE9BQU9BLEVBQUVNLEdBQUcsQ0FBQ0osU0FBU0ssSUFBSSxDQUFDVDtZQUMvQjtZQUNBLE1BQU1VLE9BQU9DLE9BQU9DLE9BQU8sQ0FBQ1YsR0FBR1csTUFBTSxDQUFDLENBQUNILE1BQU1JLFFBQVU7dUJBQUlKO3VCQUFTSTtpQkFBTSxFQUFFLEVBQUU7WUFDOUUsT0FBT0osS0FBS0YsR0FBRyxDQUFDSixTQUFTSyxJQUFJLENBQUNUO1FBQ2xDO1FBQ0EsT0FBT0ksUUFBUVcsT0FBT2I7SUFDMUI7SUFDQSxPQUFPLENBQUNjLFNBQVMsR0FBR0M7UUFDaEIsT0FBT0QsUUFBUUgsTUFBTSxDQUFDLENBQUNLLE1BQU1DLEdBQUdoQjtZQUM1QixPQUFPLENBQUMsRUFBRWUsS0FBSyxFQUFFQyxFQUFFLEVBQUVsQixFQUFFZ0IsTUFBTSxDQUFDZCxFQUFFLEVBQUVBLEdBQUcsQ0FBQztRQUMxQyxHQUFHO0lBQ1A7QUFDSjtBQUNBOztDQUVDLEdBQ00sU0FBU2lCLFVBQVVwQixZQUFZLEdBQUc7SUFDckMsT0FBTyxDQUFDcUIsUUFBUXRCLFdBQVdMLGNBQWMsR0FBS2lCLE9BQU9DLE9BQU8sQ0FBQ1MsUUFDeERDLE1BQU0sQ0FBQyxDQUFDLEdBQUdDLE1BQU0sR0FBS0EsVUFBVUMsV0FDaENoQixHQUFHLENBQUMsQ0FBQyxDQUFDaUIsTUFBTUYsTUFBTSxHQUFLekIsT0FBT0MsVUFBVUMsVUFBVyxDQUFDLEVBQUV5QixLQUFLLENBQUMsRUFBRUYsTUFBTSxDQUFDLEVBQ3JFZCxJQUFJLENBQUM7QUFDZDtBQUNBOztDQUVDLEdBQ00sU0FBU2lCLGVBQWVDLEdBQUc7SUFDOUIsT0FBT0EsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNIO0FBQzVDO0FBQ08sU0FBU0ksUUFBUSxHQUFHQyxLQUFLO0lBQzVCLE9BQU9BLE1BQ0ZWLE1BQU0sQ0FBQ1csU0FDUHpCLEdBQUcsQ0FBQyxDQUFDVyxHQUFHaEIsSUFBT0EsTUFBTSxJQUFJZ0IsSUFBSUEsRUFBRWUsT0FBTyxDQUFDLFFBQVEsS0FDL0MxQixHQUFHLENBQUMsQ0FBQ1csR0FBR2hCLEdBQUdnQyxJQUFPaEMsTUFBTWdDLEVBQUU5QixNQUFNLEdBQUcsSUFBSWMsSUFBSUEsRUFBRWUsT0FBTyxDQUFDLFFBQVEsS0FDN0R6QixJQUFJLENBQUM7QUFDZCxFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3B3cnBlcmtzLy4vbm9kZV9tb2R1bGVzL0B0emt0L29hemFwZnRzL2xpYi9tb2R1bGUvcnVudGltZS91dGlsLmpzPzg3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRW5jb2RlIHBhcmFtIG5hbWVzIGFuZCB2YWx1ZXMgYXMgVVJJQ29tcG9uZW50XG5leHBvcnQgY29uc3QgZW5jb2RlUmVzZXJ2ZWQgPSBbZW5jb2RlVVJJQ29tcG9uZW50LCBlbmNvZGVVUklDb21wb25lbnRdO1xuZXhwb3J0IGNvbnN0IGFsbG93UmVzZXJ2ZWQgPSBbZW5jb2RlVVJJQ29tcG9uZW50LCBlbmNvZGVVUkldO1xuLyoqXG4gKiBDcmVhdGVzIGEgdGFnLWZ1bmN0aW9uIHRvIGVuY29kZSB0ZW1wbGF0ZSBzdHJpbmdzIHdpdGggdGhlIGdpdmVuIGVuY29kZXJzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGVuY29kZXJzLCBkZWxpbWl0ZXIgPSBcIixcIikge1xuICAgIGNvbnN0IHEgPSAodiwgaSkgPT4ge1xuICAgICAgICBjb25zdCBlbmNvZGVyID0gZW5jb2RlcnNbaSAlIGVuY29kZXJzLmxlbmd0aF07XG4gICAgICAgIGlmICh0eXBlb2YgdiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2ID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB2Lm1hcChlbmNvZGVyKS5qb2luKGRlbGltaXRlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBmbGF0ID0gT2JqZWN0LmVudHJpZXModikucmVkdWNlKChmbGF0LCBlbnRyeSkgPT4gWy4uLmZsYXQsIC4uLmVudHJ5XSwgW10pO1xuICAgICAgICAgICAgcmV0dXJuIGZsYXQubWFwKGVuY29kZXIpLmpvaW4oZGVsaW1pdGVyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW5jb2RlcihTdHJpbmcodikpO1xuICAgIH07XG4gICAgcmV0dXJuIChzdHJpbmdzLCAuLi52YWx1ZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIHN0cmluZ3MucmVkdWNlKChwcmV2LCBzLCBpKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gYCR7cHJldn0ke3N9JHtxKHZhbHVlc1tpXSwgaSl9YDtcbiAgICAgICAgfSwgXCJcIik7XG4gICAgfTtcbn1cbi8qKlxuICogU2VwYXJhdGUgYXJyYXkgdmFsdWVzIGJ5IHRoZSBnaXZlbiBkZWxpbWl0ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxpbWl0ZWQoZGVsaW1pdGVyID0gXCIsXCIpIHtcbiAgICByZXR1cm4gKHBhcmFtcywgZW5jb2RlcnMgPSBlbmNvZGVSZXNlcnZlZCkgPT4gT2JqZWN0LmVudHJpZXMocGFyYW1zKVxuICAgICAgICAuZmlsdGVyKChbLCB2YWx1ZV0pID0+IHZhbHVlICE9PSB1bmRlZmluZWQpXG4gICAgICAgIC5tYXAoKFtuYW1lLCB2YWx1ZV0pID0+IGVuY29kZShlbmNvZGVycywgZGVsaW1pdGVyKSBgJHtuYW1lfT0ke3ZhbHVlfWApXG4gICAgICAgIC5qb2luKFwiJlwiKTtcbn1cbi8qKlxuICogRGVlcGx5IHJlbW92ZSBhbGwgcHJvcGVydGllcyB3aXRoIHVuZGVmaW5lZCB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcFVuZGVmaW5lZChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gam9pblVybCguLi5wYXJ0cykge1xuICAgIHJldHVybiBwYXJ0c1xuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5tYXAoKHMsIGkpID0+IChpID09PSAwID8gcyA6IHMucmVwbGFjZSgvXlxcLysvLCBcIlwiKSkpXG4gICAgICAgIC5tYXAoKHMsIGksIGEpID0+IChpID09PSBhLmxlbmd0aCAtIDEgPyBzIDogcy5yZXBsYWNlKC9cXC8rJC8sIFwiXCIpKSlcbiAgICAgICAgLmpvaW4oXCIvXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlUmVzZXJ2ZWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJhbGxvd1Jlc2VydmVkIiwiZW5jb2RlVVJJIiwiZW5jb2RlIiwiZW5jb2RlcnMiLCJkZWxpbWl0ZXIiLCJxIiwidiIsImkiLCJlbmNvZGVyIiwibGVuZ3RoIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiam9pbiIsImZsYXQiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVkdWNlIiwiZW50cnkiLCJTdHJpbmciLCJzdHJpbmdzIiwidmFsdWVzIiwicHJldiIsInMiLCJkZWxpbWl0ZWQiLCJwYXJhbXMiLCJmaWx0ZXIiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsIm5hbWUiLCJzdHJpcFVuZGVmaW5lZCIsIm9iaiIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsImpvaW5VcmwiLCJwYXJ0cyIsIkJvb2xlYW4iLCJyZXBsYWNlIiwiYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tzkt/sdk-api/build/module/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tzkt/sdk-api/build/module/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountsGet: () => (/* binding */ accountsGet),\n/* harmony export */   accountsGetBalance: () => (/* binding */ accountsGetBalance),\n/* harmony export */   accountsGetBalanceAtDate: () => (/* binding */ accountsGetBalanceAtDate),\n/* harmony export */   accountsGetBalanceAtLevel: () => (/* binding */ accountsGetBalanceAtLevel),\n/* harmony export */   accountsGetBalanceHistory: () => (/* binding */ accountsGetBalanceHistory),\n/* harmony export */   accountsGetBalanceReport: () => (/* binding */ accountsGetBalanceReport),\n/* harmony export */   accountsGetByAddress: () => (/* binding */ accountsGetByAddress),\n/* harmony export */   accountsGetContracts: () => (/* binding */ accountsGetContracts),\n/* harmony export */   accountsGetCount: () => (/* binding */ accountsGetCount),\n/* harmony export */   accountsGetCounter: () => (/* binding */ accountsGetCounter),\n/* harmony export */   accountsGetDelegators: () => (/* binding */ accountsGetDelegators),\n/* harmony export */   accountsGetOperations: () => (/* binding */ accountsGetOperations),\n/* harmony export */   bigMapsGetBigMapById: () => (/* binding */ bigMapsGetBigMapById),\n/* harmony export */   bigMapsGetBigMapType: () => (/* binding */ bigMapsGetBigMapType),\n/* harmony export */   bigMapsGetBigMapUpdates: () => (/* binding */ bigMapsGetBigMapUpdates),\n/* harmony export */   bigMapsGetBigMaps: () => (/* binding */ bigMapsGetBigMaps),\n/* harmony export */   bigMapsGetBigMapsCount: () => (/* binding */ bigMapsGetBigMapsCount),\n/* harmony export */   bigMapsGetHistoricalKeys: () => (/* binding */ bigMapsGetHistoricalKeys),\n/* harmony export */   bigMapsGetKey: () => (/* binding */ bigMapsGetKey),\n/* harmony export */   bigMapsGetKey2: () => (/* binding */ bigMapsGetKey2),\n/* harmony export */   bigMapsGetKeyUpdates: () => (/* binding */ bigMapsGetKeyUpdates),\n/* harmony export */   bigMapsGetKeys: () => (/* binding */ bigMapsGetKeys),\n/* harmony export */   blocksGet: () => (/* binding */ blocksGet),\n/* harmony export */   blocksGetByDate: () => (/* binding */ blocksGetByDate),\n/* harmony export */   blocksGetByDate2: () => (/* binding */ blocksGetByDate2),\n/* harmony export */   blocksGetByHash: () => (/* binding */ blocksGetByHash),\n/* harmony export */   blocksGetByLevel: () => (/* binding */ blocksGetByLevel),\n/* harmony export */   blocksGetByLevel2: () => (/* binding */ blocksGetByLevel2),\n/* harmony export */   blocksGetCount: () => (/* binding */ blocksGetCount),\n/* harmony export */   commitmentsGet: () => (/* binding */ commitmentsGet),\n/* harmony export */   commitmentsGetAll: () => (/* binding */ commitmentsGetAll),\n/* harmony export */   commitmentsGetCount: () => (/* binding */ commitmentsGetCount),\n/* harmony export */   constantsGet: () => (/* binding */ constantsGet),\n/* harmony export */   constantsGetByAddress: () => (/* binding */ constantsGetByAddress),\n/* harmony export */   constantsGetCount: () => (/* binding */ constantsGetCount),\n/* harmony export */   contractsBuildEntrypointParametersGet: () => (/* binding */ contractsBuildEntrypointParametersGet),\n/* harmony export */   contractsBuildEntrypointParametersPost: () => (/* binding */ contractsBuildEntrypointParametersPost),\n/* harmony export */   contractsGet: () => (/* binding */ contractsGet),\n/* harmony export */   contractsGetBigMapByName: () => (/* binding */ contractsGetBigMapByName),\n/* harmony export */   contractsGetBigMapByNameKeys: () => (/* binding */ contractsGetBigMapByNameKeys),\n/* harmony export */   contractsGetBigMaps: () => (/* binding */ contractsGetBigMaps),\n/* harmony export */   contractsGetByAddress: () => (/* binding */ contractsGetByAddress),\n/* harmony export */   contractsGetCode: () => (/* binding */ contractsGetCode),\n/* harmony export */   contractsGetContractViewByName: () => (/* binding */ contractsGetContractViewByName),\n/* harmony export */   contractsGetContractViews: () => (/* binding */ contractsGetContractViews),\n/* harmony export */   contractsGetCount: () => (/* binding */ contractsGetCount),\n/* harmony export */   contractsGetEntrypointByName: () => (/* binding */ contractsGetEntrypointByName),\n/* harmony export */   contractsGetEntrypoints: () => (/* binding */ contractsGetEntrypoints),\n/* harmony export */   contractsGetHistoricalKeys: () => (/* binding */ contractsGetHistoricalKeys),\n/* harmony export */   contractsGetInterface: () => (/* binding */ contractsGetInterface),\n/* harmony export */   contractsGetKey: () => (/* binding */ contractsGetKey),\n/* harmony export */   contractsGetKey2: () => (/* binding */ contractsGetKey2),\n/* harmony export */   contractsGetKeyUpdates: () => (/* binding */ contractsGetKeyUpdates),\n/* harmony export */   contractsGetRawStorage: () => (/* binding */ contractsGetRawStorage),\n/* harmony export */   contractsGetRawStorageHistory: () => (/* binding */ contractsGetRawStorageHistory),\n/* harmony export */   contractsGetRawStorageSchema: () => (/* binding */ contractsGetRawStorageSchema),\n/* harmony export */   contractsGetSame: () => (/* binding */ contractsGetSame),\n/* harmony export */   contractsGetSimilar: () => (/* binding */ contractsGetSimilar),\n/* harmony export */   contractsGetStorage: () => (/* binding */ contractsGetStorage),\n/* harmony export */   contractsGetStorageHistory: () => (/* binding */ contractsGetStorageHistory),\n/* harmony export */   contractsGetStorageSchema: () => (/* binding */ contractsGetStorageSchema),\n/* harmony export */   cyclesGet: () => (/* binding */ cyclesGet),\n/* harmony export */   cyclesGetByIndex: () => (/* binding */ cyclesGetByIndex),\n/* harmony export */   cyclesGetCount: () => (/* binding */ cyclesGetCount),\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   delegatesGet: () => (/* binding */ delegatesGet),\n/* harmony export */   delegatesGetByAddress: () => (/* binding */ delegatesGetByAddress),\n/* harmony export */   delegatesGetCount: () => (/* binding */ delegatesGetCount),\n/* harmony export */   domainsGet: () => (/* binding */ domainsGet),\n/* harmony export */   domainsGetByName: () => (/* binding */ domainsGetByName),\n/* harmony export */   domainsGetCount: () => (/* binding */ domainsGetCount),\n/* harmony export */   eventsGetContractEvents: () => (/* binding */ eventsGetContractEvents),\n/* harmony export */   eventsGetContractEventsCount: () => (/* binding */ eventsGetContractEventsCount),\n/* harmony export */   headGet: () => (/* binding */ headGet),\n/* harmony export */   helpersPostInject: () => (/* binding */ helpersPostInject),\n/* harmony export */   helpersPostRunScriptView: () => (/* binding */ helpersPostRunScriptView),\n/* harmony export */   operationsGetActivationByHash: () => (/* binding */ operationsGetActivationByHash),\n/* harmony export */   operationsGetActivations: () => (/* binding */ operationsGetActivations),\n/* harmony export */   operationsGetActivationsCount: () => (/* binding */ operationsGetActivationsCount),\n/* harmony export */   operationsGetBaking: () => (/* binding */ operationsGetBaking),\n/* harmony export */   operationsGetBakingById: () => (/* binding */ operationsGetBakingById),\n/* harmony export */   operationsGetBakingCount: () => (/* binding */ operationsGetBakingCount),\n/* harmony export */   operationsGetBallotByHash: () => (/* binding */ operationsGetBallotByHash),\n/* harmony export */   operationsGetBallots: () => (/* binding */ operationsGetBallots),\n/* harmony export */   operationsGetBallotsCount: () => (/* binding */ operationsGetBallotsCount),\n/* harmony export */   operationsGetByHash: () => (/* binding */ operationsGetByHash),\n/* harmony export */   operationsGetByHashCounter: () => (/* binding */ operationsGetByHashCounter),\n/* harmony export */   operationsGetByHashCounterNonce: () => (/* binding */ operationsGetByHashCounterNonce),\n/* harmony export */   operationsGetDelegationByHash: () => (/* binding */ operationsGetDelegationByHash),\n/* harmony export */   operationsGetDelegationStatus: () => (/* binding */ operationsGetDelegationStatus),\n/* harmony export */   operationsGetDelegations: () => (/* binding */ operationsGetDelegations),\n/* harmony export */   operationsGetDelegationsCount: () => (/* binding */ operationsGetDelegationsCount),\n/* harmony export */   operationsGetDoubleBaking: () => (/* binding */ operationsGetDoubleBaking),\n/* harmony export */   operationsGetDoubleBakingByHash: () => (/* binding */ operationsGetDoubleBakingByHash),\n/* harmony export */   operationsGetDoubleBakingCount: () => (/* binding */ operationsGetDoubleBakingCount),\n/* harmony export */   operationsGetDoubleEndorsing: () => (/* binding */ operationsGetDoubleEndorsing),\n/* harmony export */   operationsGetDoubleEndorsingByHash: () => (/* binding */ operationsGetDoubleEndorsingByHash),\n/* harmony export */   operationsGetDoubleEndorsingCount: () => (/* binding */ operationsGetDoubleEndorsingCount),\n/* harmony export */   operationsGetDoublePreendorsing: () => (/* binding */ operationsGetDoublePreendorsing),\n/* harmony export */   operationsGetDoublePreendorsingByHash: () => (/* binding */ operationsGetDoublePreendorsingByHash),\n/* harmony export */   operationsGetDoublePreendorsingCount: () => (/* binding */ operationsGetDoublePreendorsingCount),\n/* harmony export */   operationsGetDrainDelegateByHash: () => (/* binding */ operationsGetDrainDelegateByHash),\n/* harmony export */   operationsGetDrainDelegateOps: () => (/* binding */ operationsGetDrainDelegateOps),\n/* harmony export */   operationsGetDrainDelegateOpsCount: () => (/* binding */ operationsGetDrainDelegateOpsCount),\n/* harmony export */   operationsGetEndorsementByHash: () => (/* binding */ operationsGetEndorsementByHash),\n/* harmony export */   operationsGetEndorsements: () => (/* binding */ operationsGetEndorsements),\n/* harmony export */   operationsGetEndorsementsCount: () => (/* binding */ operationsGetEndorsementsCount),\n/* harmony export */   operationsGetEndorsingRewardById: () => (/* binding */ operationsGetEndorsingRewardById),\n/* harmony export */   operationsGetEndorsingRewards: () => (/* binding */ operationsGetEndorsingRewards),\n/* harmony export */   operationsGetEndorsingRewardsCount: () => (/* binding */ operationsGetEndorsingRewardsCount),\n/* harmony export */   operationsGetIncreasePaidStorageByHash: () => (/* binding */ operationsGetIncreasePaidStorageByHash),\n/* harmony export */   operationsGetIncreasePaidStorageCount: () => (/* binding */ operationsGetIncreasePaidStorageCount),\n/* harmony export */   operationsGetIncreasePaidStorageOps: () => (/* binding */ operationsGetIncreasePaidStorageOps),\n/* harmony export */   operationsGetMigrationById: () => (/* binding */ operationsGetMigrationById),\n/* harmony export */   operationsGetMigrations: () => (/* binding */ operationsGetMigrations),\n/* harmony export */   operationsGetMigrationsCount: () => (/* binding */ operationsGetMigrationsCount),\n/* harmony export */   operationsGetNonceRevelationByHash: () => (/* binding */ operationsGetNonceRevelationByHash),\n/* harmony export */   operationsGetNonceRevelations: () => (/* binding */ operationsGetNonceRevelations),\n/* harmony export */   operationsGetNonceRevelationsCount: () => (/* binding */ operationsGetNonceRevelationsCount),\n/* harmony export */   operationsGetOriginationByHash: () => (/* binding */ operationsGetOriginationByHash),\n/* harmony export */   operationsGetOriginationStatus: () => (/* binding */ operationsGetOriginationStatus),\n/* harmony export */   operationsGetOriginations: () => (/* binding */ operationsGetOriginations),\n/* harmony export */   operationsGetOriginationsCount: () => (/* binding */ operationsGetOriginationsCount),\n/* harmony export */   operationsGetPreendorsementByHash: () => (/* binding */ operationsGetPreendorsementByHash),\n/* harmony export */   operationsGetPreendorsements: () => (/* binding */ operationsGetPreendorsements),\n/* harmony export */   operationsGetPreendorsementsCount: () => (/* binding */ operationsGetPreendorsementsCount),\n/* harmony export */   operationsGetProposalByHash: () => (/* binding */ operationsGetProposalByHash),\n/* harmony export */   operationsGetProposals: () => (/* binding */ operationsGetProposals),\n/* harmony export */   operationsGetProposalsCount: () => (/* binding */ operationsGetProposalsCount),\n/* harmony export */   operationsGetRegisterConstantByHash: () => (/* binding */ operationsGetRegisterConstantByHash),\n/* harmony export */   operationsGetRegisterConstantStatus: () => (/* binding */ operationsGetRegisterConstantStatus),\n/* harmony export */   operationsGetRegisterConstants: () => (/* binding */ operationsGetRegisterConstants),\n/* harmony export */   operationsGetRegisterConstantsCount: () => (/* binding */ operationsGetRegisterConstantsCount),\n/* harmony export */   operationsGetRevealByHash: () => (/* binding */ operationsGetRevealByHash),\n/* harmony export */   operationsGetRevealStatus: () => (/* binding */ operationsGetRevealStatus),\n/* harmony export */   operationsGetReveals: () => (/* binding */ operationsGetReveals),\n/* harmony export */   operationsGetRevealsCount: () => (/* binding */ operationsGetRevealsCount),\n/* harmony export */   operationsGetRevelationPenalties: () => (/* binding */ operationsGetRevelationPenalties),\n/* harmony export */   operationsGetRevelationPenaltiesCount: () => (/* binding */ operationsGetRevelationPenaltiesCount),\n/* harmony export */   operationsGetRevelationPenaltyById: () => (/* binding */ operationsGetRevelationPenaltyById),\n/* harmony export */   operationsGetSetDepositsLimitByHash: () => (/* binding */ operationsGetSetDepositsLimitByHash),\n/* harmony export */   operationsGetSetDepositsLimitStatus: () => (/* binding */ operationsGetSetDepositsLimitStatus),\n/* harmony export */   operationsGetSetDepositsLimits: () => (/* binding */ operationsGetSetDepositsLimits),\n/* harmony export */   operationsGetSetDepositsLimitsCount: () => (/* binding */ operationsGetSetDepositsLimitsCount),\n/* harmony export */   operationsGetStatus: () => (/* binding */ operationsGetStatus),\n/* harmony export */   operationsGetTransactionByHash: () => (/* binding */ operationsGetTransactionByHash),\n/* harmony export */   operationsGetTransactionByHashCounter: () => (/* binding */ operationsGetTransactionByHashCounter),\n/* harmony export */   operationsGetTransactionByHashCounterNonce: () => (/* binding */ operationsGetTransactionByHashCounterNonce),\n/* harmony export */   operationsGetTransactionStatus: () => (/* binding */ operationsGetTransactionStatus),\n/* harmony export */   operationsGetTransactions: () => (/* binding */ operationsGetTransactions),\n/* harmony export */   operationsGetTransactionsCount: () => (/* binding */ operationsGetTransactionsCount),\n/* harmony export */   operationsGetTransferTicketOps: () => (/* binding */ operationsGetTransferTicketOps),\n/* harmony export */   operationsGetTransferTicketOpsByHash: () => (/* binding */ operationsGetTransferTicketOpsByHash),\n/* harmony export */   operationsGetTransferTicketOpsCount: () => (/* binding */ operationsGetTransferTicketOpsCount),\n/* harmony export */   operationsGetTransferTicketStatus: () => (/* binding */ operationsGetTransferTicketStatus),\n/* harmony export */   operationsGetTxRollupCommitOps: () => (/* binding */ operationsGetTxRollupCommitOps),\n/* harmony export */   operationsGetTxRollupCommitOpsByHash: () => (/* binding */ operationsGetTxRollupCommitOpsByHash),\n/* harmony export */   operationsGetTxRollupCommitOpsCount: () => (/* binding */ operationsGetTxRollupCommitOpsCount),\n/* harmony export */   operationsGetTxRollupCommitStatus: () => (/* binding */ operationsGetTxRollupCommitStatus),\n/* harmony export */   operationsGetTxRollupDispatchTicketsOps: () => (/* binding */ operationsGetTxRollupDispatchTicketsOps),\n/* harmony export */   operationsGetTxRollupDispatchTicketsOpsByHash: () => (/* binding */ operationsGetTxRollupDispatchTicketsOpsByHash),\n/* harmony export */   operationsGetTxRollupDispatchTicketsOpsCount: () => (/* binding */ operationsGetTxRollupDispatchTicketsOpsCount),\n/* harmony export */   operationsGetTxRollupDispatchTicketsStatus: () => (/* binding */ operationsGetTxRollupDispatchTicketsStatus),\n/* harmony export */   operationsGetTxRollupFinalizeCommitmentOps: () => (/* binding */ operationsGetTxRollupFinalizeCommitmentOps),\n/* harmony export */   operationsGetTxRollupFinalizeCommitmentOpsByHash: () => (/* binding */ operationsGetTxRollupFinalizeCommitmentOpsByHash),\n/* harmony export */   operationsGetTxRollupFinalizeCommitmentOpsCount: () => (/* binding */ operationsGetTxRollupFinalizeCommitmentOpsCount),\n/* harmony export */   operationsGetTxRollupFinalizeCommitmentStatus: () => (/* binding */ operationsGetTxRollupFinalizeCommitmentStatus),\n/* harmony export */   operationsGetTxRollupOriginationOps: () => (/* binding */ operationsGetTxRollupOriginationOps),\n/* harmony export */   operationsGetTxRollupOriginationOpsByHash: () => (/* binding */ operationsGetTxRollupOriginationOpsByHash),\n/* harmony export */   operationsGetTxRollupOriginationOpsCount: () => (/* binding */ operationsGetTxRollupOriginationOpsCount),\n/* harmony export */   operationsGetTxRollupOriginationStatus: () => (/* binding */ operationsGetTxRollupOriginationStatus),\n/* harmony export */   operationsGetTxRollupRejectionOps: () => (/* binding */ operationsGetTxRollupRejectionOps),\n/* harmony export */   operationsGetTxRollupRejectionOpsByHash: () => (/* binding */ operationsGetTxRollupRejectionOpsByHash),\n/* harmony export */   operationsGetTxRollupRejectionOpsCount: () => (/* binding */ operationsGetTxRollupRejectionOpsCount),\n/* harmony export */   operationsGetTxRollupRejectionStatus: () => (/* binding */ operationsGetTxRollupRejectionStatus),\n/* harmony export */   operationsGetTxRollupRemoveCommitmentOps: () => (/* binding */ operationsGetTxRollupRemoveCommitmentOps),\n/* harmony export */   operationsGetTxRollupRemoveCommitmentOpsByHash: () => (/* binding */ operationsGetTxRollupRemoveCommitmentOpsByHash),\n/* harmony export */   operationsGetTxRollupRemoveCommitmentOpsCount: () => (/* binding */ operationsGetTxRollupRemoveCommitmentOpsCount),\n/* harmony export */   operationsGetTxRollupRemoveCommitmentStatus: () => (/* binding */ operationsGetTxRollupRemoveCommitmentStatus),\n/* harmony export */   operationsGetTxRollupReturnBondOps: () => (/* binding */ operationsGetTxRollupReturnBondOps),\n/* harmony export */   operationsGetTxRollupReturnBondOpsByHash: () => (/* binding */ operationsGetTxRollupReturnBondOpsByHash),\n/* harmony export */   operationsGetTxRollupReturnBondOpsCount: () => (/* binding */ operationsGetTxRollupReturnBondOpsCount),\n/* harmony export */   operationsGetTxRollupReturnBondStatus: () => (/* binding */ operationsGetTxRollupReturnBondStatus),\n/* harmony export */   operationsGetTxRollupSubmitBatchOps: () => (/* binding */ operationsGetTxRollupSubmitBatchOps),\n/* harmony export */   operationsGetTxRollupSubmitBatchOpsByHash: () => (/* binding */ operationsGetTxRollupSubmitBatchOpsByHash),\n/* harmony export */   operationsGetTxRollupSubmitBatchOpsCount: () => (/* binding */ operationsGetTxRollupSubmitBatchOpsCount),\n/* harmony export */   operationsGetTxRollupSubmitBatchStatus: () => (/* binding */ operationsGetTxRollupSubmitBatchStatus),\n/* harmony export */   operationsGetUpdateConsensusKeyByHash: () => (/* binding */ operationsGetUpdateConsensusKeyByHash),\n/* harmony export */   operationsGetUpdateConsensusKeyOps: () => (/* binding */ operationsGetUpdateConsensusKeyOps),\n/* harmony export */   operationsGetUpdateConsensusKeyOpsCount: () => (/* binding */ operationsGetUpdateConsensusKeyOpsCount),\n/* harmony export */   operationsGetVdfRevelationByHash: () => (/* binding */ operationsGetVdfRevelationByHash),\n/* harmony export */   operationsGetVdfRevelations: () => (/* binding */ operationsGetVdfRevelations),\n/* harmony export */   operationsGetVdfRevelationsCount: () => (/* binding */ operationsGetVdfRevelationsCount),\n/* harmony export */   protocolsGet: () => (/* binding */ protocolsGet),\n/* harmony export */   protocolsGetByCode: () => (/* binding */ protocolsGetByCode),\n/* harmony export */   protocolsGetByCycle: () => (/* binding */ protocolsGetByCycle),\n/* harmony export */   protocolsGetByHash: () => (/* binding */ protocolsGetByHash),\n/* harmony export */   protocolsGetCount: () => (/* binding */ protocolsGetCount),\n/* harmony export */   protocolsGetCurrent: () => (/* binding */ protocolsGetCurrent),\n/* harmony export */   quotesGet: () => (/* binding */ quotesGet),\n/* harmony export */   quotesGetCount: () => (/* binding */ quotesGetCount),\n/* harmony export */   quotesGetLast: () => (/* binding */ quotesGetLast),\n/* harmony export */   rewardsGetBakerRewards: () => (/* binding */ rewardsGetBakerRewards),\n/* harmony export */   rewardsGetBakerRewardsByCycle: () => (/* binding */ rewardsGetBakerRewardsByCycle),\n/* harmony export */   rewardsGetBakerRewardsCount: () => (/* binding */ rewardsGetBakerRewardsCount),\n/* harmony export */   rewardsGetDelegatorRewards: () => (/* binding */ rewardsGetDelegatorRewards),\n/* harmony export */   rewardsGetDelegatorRewardsByCycle: () => (/* binding */ rewardsGetDelegatorRewardsByCycle),\n/* harmony export */   rewardsGetDelegatorRewardsCount: () => (/* binding */ rewardsGetDelegatorRewardsCount),\n/* harmony export */   rewardsGetRewardSplit: () => (/* binding */ rewardsGetRewardSplit),\n/* harmony export */   rewardsGetRewardSplitDelegator: () => (/* binding */ rewardsGetRewardSplitDelegator),\n/* harmony export */   rightsGet: () => (/* binding */ rightsGet),\n/* harmony export */   rightsGetCount: () => (/* binding */ rightsGetCount),\n/* harmony export */   servers: () => (/* binding */ servers),\n/* harmony export */   softwareGet: () => (/* binding */ softwareGet),\n/* harmony export */   softwareGetCount: () => (/* binding */ softwareGetCount),\n/* harmony export */   statisticsGet: () => (/* binding */ statisticsGet),\n/* harmony export */   statisticsGetCycles: () => (/* binding */ statisticsGetCycles),\n/* harmony export */   statisticsGetCyclesAll: () => (/* binding */ statisticsGetCyclesAll),\n/* harmony export */   statisticsGetDaily: () => (/* binding */ statisticsGetDaily),\n/* harmony export */   tokensGetTokenBalances: () => (/* binding */ tokensGetTokenBalances),\n/* harmony export */   tokensGetTokenBalances2: () => (/* binding */ tokensGetTokenBalances2),\n/* harmony export */   tokensGetTokenBalancesCount: () => (/* binding */ tokensGetTokenBalancesCount),\n/* harmony export */   tokensGetTokenTransfers: () => (/* binding */ tokensGetTokenTransfers),\n/* harmony export */   tokensGetTokenTransfersCount: () => (/* binding */ tokensGetTokenTransfersCount),\n/* harmony export */   tokensGetTokens: () => (/* binding */ tokensGetTokens),\n/* harmony export */   tokensGetTokensCount: () => (/* binding */ tokensGetTokensCount),\n/* harmony export */   votingGetCurrentEpoch: () => (/* binding */ votingGetCurrentEpoch),\n/* harmony export */   votingGetCurrentPeriod: () => (/* binding */ votingGetCurrentPeriod),\n/* harmony export */   votingGetEpoch: () => (/* binding */ votingGetEpoch),\n/* harmony export */   votingGetEpochs: () => (/* binding */ votingGetEpochs),\n/* harmony export */   votingGetLatestVoting: () => (/* binding */ votingGetLatestVoting),\n/* harmony export */   votingGetPeriod: () => (/* binding */ votingGetPeriod),\n/* harmony export */   votingGetPeriodVoter: () => (/* binding */ votingGetPeriodVoter),\n/* harmony export */   votingGetPeriodVoter2: () => (/* binding */ votingGetPeriodVoter2),\n/* harmony export */   votingGetPeriodVoters: () => (/* binding */ votingGetPeriodVoters),\n/* harmony export */   votingGetPeriodVoters2: () => (/* binding */ votingGetPeriodVoters2),\n/* harmony export */   votingGetPeriods: () => (/* binding */ votingGetPeriods),\n/* harmony export */   votingGetProposalByHash: () => (/* binding */ votingGetProposalByHash),\n/* harmony export */   votingGetProposals: () => (/* binding */ votingGetProposals),\n/* harmony export */   votingGetProposalsCount: () => (/* binding */ votingGetProposalsCount)\n/* harmony export */ });\n/* harmony import */ var _tzkt_oazapfts_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tzkt/oazapfts/runtime */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/index.js\");\n/* harmony import */ var _tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tzkt/oazapfts/runtime/query */ \"(ssr)/./node_modules/@tzkt/oazapfts/lib/module/runtime/query.js\");\n/* harmony import */ var _queryParamParsers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryParamParsers */ \"(ssr)/./node_modules/@tzkt/sdk-api/build/module/queryParamParsers.js\");\n/* eslint-disable @typescript-eslint/no-explicit-any */ /**\n * DO NOT MODIFY - This file has been generated using @tzkt/oazapfts.\n * See https://www.npmjs.com/package/@tzkt/oazapfts\n */ \n\n\nconst defaults = {\n    baseUrl: \"https://api.tzkt.io\"\n};\nconst oazapfts = _tzkt_oazapfts_runtime__WEBPACK_IMPORTED_MODULE_0__.runtime(defaults);\nconst servers = {\n    server1: \"https://api.tzkt.io\"\n};\n/**\n * Get accounts\n */ function accountsGet({ id, address, $type, kind, delegate, balance, staked, lastActivity, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"type\", $type),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"kind\", kind),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"staked\", staked),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastActivity\", lastActivity),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get accounts count\n */ function accountsGetCount({ $type, kind, balance, staked, firstActivity } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"type\", $type),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"kind\", kind),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"staked\", staked),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstActivity\", firstActivity)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get account by address\n */ function accountsGetByAddress(address, { legacy } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        legacy\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get account contracts\n */ function accountsGetContracts(address, { sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/contracts${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get account delegators\n */ function accountsGetDelegators(address, { $type, balance, delegationLevel, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/delegators${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"type\", $type),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegationLevel\", delegationLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get account operations\n */ function accountsGetOperations(address, { $type, initiator, sender, target, prevDelegate, newDelegate, contractManager, contractDelegate, originatedContract, accuser, offender, baker, level, timestamp, entrypoint, parameter, hasInternals, status, sort, lastId, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/operations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        type: $type,\n        sort,\n        lastId,\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"initiator\", initiator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"target\", target),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"prevDelegate\", prevDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"newDelegate\", newDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contractManager\", contractManager),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contractDelegate\", contractDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"originatedContract\", originatedContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"accuser\", accuser),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offender\", offender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"entrypoint\", entrypoint),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"parameter\", parameter),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"hasInternals\", hasInternals),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get counter\n */ function accountsGetCounter(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/counter`, {\n        ...opts\n    }));\n}\n/**\n * Get balance\n */ function accountsGetBalance(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/balance`, {\n        ...opts\n    }));\n}\n/**\n * Get balance at level\n */ function accountsGetBalanceAtLevel(address, level, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/balance_history/${encodeURIComponent(level)}`, {\n        ...opts\n    }));\n}\n/**\n * Get balance at date\n */ function accountsGetBalanceAtDate(address, datetime, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/balance_history/${encodeURIComponent(datetime)}`, {\n        ...opts\n    }));\n}\n/**\n * Get balance history\n */ function accountsGetBalanceHistory(address, { step, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/accounts/${encodeURIComponent(address)}/balance_history${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        step,\n        offset,\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get account report\n */ function accountsGetBalanceReport(address, { $from, to, currency, historical, delimiter, separator } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/accounts/${encodeURIComponent(address)}/report${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        from: $from,\n        to,\n        currency,\n        historical,\n        delimiter,\n        separator\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmaps count\n */ function bigMapsGetBigMapsCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/bigmaps/count\", {\n        ...opts\n    }));\n}\n/**\n * Get bigmaps\n */ function bigMapsGetBigMaps({ contract, path, tags, active, lastLevel, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        active,\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"path\", path),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tags\", tags),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap updates\n */ function bigMapsGetBigMapUpdates({ bigmap, path, contract, tags, action, value, level, timestamp, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/updates${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"bigmap\", bigmap),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"path\", path),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tags\", tags),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"action\", action),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"value\", value),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap by Id\n */ function bigMapsGetBigMapById(id, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap type\n */ function bigMapsGetBigMapType(id, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/type`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap keys\n */ function bigMapsGetKeys(id, { active, key, value, lastLevel, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/keys${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        active,\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"key\", key),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"value\", value),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap key\n */ function bigMapsGetKey(id, key, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/keys/${encodeURIComponent(key)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap key updates\n */ function bigMapsGetKeyUpdates(id, key, { sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/keys/${encodeURIComponent(key)}/updates${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get historical keys\n */ function bigMapsGetHistoricalKeys(id, level, { active, key, value, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/historical_keys/${encodeURIComponent(level)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        active,\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"key\", key),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"value\", value),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get historical key\n */ function bigMapsGetKey2(id, level, key, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/bigmaps/${encodeURIComponent(id)}/historical_keys/${encodeURIComponent(level)}/${encodeURIComponent(key)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get blocks count\n */ function blocksGetCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/blocks/count\", {\n        ...opts\n    }));\n}\n/**\n * Get blocks\n */ function blocksGet({ baker, anyof, proposer, producer, level, timestamp, priority, blockRound, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"proposer\", proposer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"producer\", producer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"priority\", priority),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"blockRound\", blockRound),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get block by hash\n */ function blocksGetByHash(hash, { operations, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        operations,\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get block by level\n */ function blocksGetByLevel(level, { operations, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks/${encodeURIComponent(level)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        operations,\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get timestamp by level\n */ function blocksGetByLevel2(level, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks/${encodeURIComponent(level)}/timestamp`, {\n        ...opts\n    }));\n}\n/**\n * Get block by timestamp\n */ function blocksGetByDate(timestamp, { operations, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks/${encodeURIComponent(timestamp)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        operations,\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get level by timestamp\n */ function blocksGetByDate2(timestamp, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/blocks/${encodeURIComponent(timestamp)}/level`, {\n        ...opts\n    }));\n}\n/**\n * Get commitment by blinded address\n */ function commitmentsGet(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/commitments/${encodeURIComponent(address)}`, {\n        ...opts\n    }));\n}\n/**\n * Get commitments\n */ function commitmentsGetAll({ activated, activationLevel, balance, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/commitments${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        activated,\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"activationLevel\", activationLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get commitments count\n */ function commitmentsGetCount({ activated, balance } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/commitments/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        activated,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get global constants\n */ function constantsGet({ address, creationLevel, creationTime, creator, refs, size, select, sort, offset, limit, format } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/constants${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        format,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"creationLevel\", creationLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"creationTime\", creationTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"creator\", creator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"refs\", refs),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"size\", size),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get global constant by address\n */ function constantsGetByAddress(address, { format } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/constants/${encodeURIComponent(address)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        format\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get global constants count\n */ function constantsGetCount({ refs } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/constants/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"refs\", refs)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contracts\n */ function contractsGet({ address, kind, tzips, creator, manager, delegate, balance, lastActivity, typeHash, codeHash, select, sort, offset, limit, includeStorage } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        includeStorage,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"kind\", kind),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tzips\", tzips),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"creator\", creator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"manager\", manager),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastActivity\", lastActivity),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"typeHash\", typeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"codeHash\", codeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contracts count\n */ function contractsGetCount({ kind } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"kind\", kind)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract by address\n */ function contractsGetByAddress(address, { legacy } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        legacy\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get same contracts\n */ function contractsGetSame(address, { select, sort, offset, limit, includeStorage } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/same${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        includeStorage,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get similar contracts\n */ function contractsGetSimilar(address, { select, sort, offset, limit, includeStorage } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/similar${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        includeStorage,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract code\n */ function contractsGetCode(address, { level, format } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/contracts/${encodeURIComponent(address)}/code${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        level,\n        format\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get JSON Schema [2020-12] interface for the contract\n */ function contractsGetInterface(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/interface`, {\n        ...opts\n    }));\n}\n/**\n * Get contract entrypoints\n */ function contractsGetEntrypoints(address, { all, json, micheline, michelson } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/entrypoints${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        all,\n        json,\n        micheline,\n        michelson\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get entrypoint by name\n */ function contractsGetEntrypointByName(address, name, { json, micheline, michelson } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/entrypoints/${encodeURIComponent(name)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        json,\n        micheline,\n        michelson\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract views\n */ function contractsGetContractViews(address, { json, micheline, michelson } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/views${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        json,\n        micheline,\n        michelson\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get view by name\n */ function contractsGetContractViewByName(address, name, { json, micheline, michelson } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/views/${encodeURIComponent(name)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        json,\n        micheline,\n        michelson\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Build entrypoint parameters\n */ function contractsBuildEntrypointParametersGet(address, name, { value } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/contracts/${encodeURIComponent(address)}/entrypoints/${encodeURIComponent(name)}/build${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        value\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Build entrypoint parameters\n */ function contractsBuildEntrypointParametersPost(address, name, body, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/contracts/${encodeURIComponent(address)}/entrypoints/${encodeURIComponent(name)}/build`, oazapfts.json({\n        ...opts,\n        method: \"POST\",\n        body\n    })));\n}\n/**\n * Get contract storage\n */ function contractsGetStorage(address, { level, path } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/contracts/${encodeURIComponent(address)}/storage${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        level,\n        path\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract storage schema\n */ function contractsGetStorageSchema(address, { level } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/contracts/${encodeURIComponent(address)}/storage/schema${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        level\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract storage history\n */ function contractsGetStorageHistory(address, { lastId, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/storage/history${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        lastId,\n        limit\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get raw contract storage\n */ function contractsGetRawStorage(address, { level } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/storage/raw${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        level\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get raw contract storage schema\n */ function contractsGetRawStorageSchema(address, { level } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/storage/raw/schema${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        level\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get raw contract storage history\n */ function contractsGetRawStorageHistory(address, { lastId, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/storage/raw/history${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        lastId,\n        limit\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract bigmaps\n */ function contractsGetBigMaps(address, { tags, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tags\", tags),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap by name\n */ function contractsGetBigMapByName(address, name, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap keys\n */ function contractsGetBigMapByNameKeys(address, name, { active, key, value, lastLevel, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}/keys${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        active,\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"key\", key),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"value\", value),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap key\n */ function contractsGetKey(address, name, key, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}/keys/${encodeURIComponent(key)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get bigmap key updates\n */ function contractsGetKeyUpdates(address, name, key, { sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}/keys/${encodeURIComponent(key)}/updates${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get historical keys\n */ function contractsGetHistoricalKeys(address, name, level, { active, key, value, select, sort, offset, limit, micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}/historical_keys/${encodeURIComponent(level)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        active,\n        limit,\n        micheline,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"key\", key),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"value\", value),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get historical key\n */ function contractsGetKey2(address, name, level, key, { micheline } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/${encodeURIComponent(address)}/bigmaps/${encodeURIComponent(name)}/historical_keys/${encodeURIComponent(level)}/${encodeURIComponent(key)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get cycles count\n */ function cyclesGetCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/cycles/count\", {\n        ...opts\n    }));\n}\n/**\n * Get cycles\n */ function cyclesGet({ snapshotIndex, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/cycles${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"snapshotIndex\", snapshotIndex),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get cycle by index\n */ function cyclesGetByIndex(index, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/cycles/${encodeURIComponent(index)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegates\n */ function delegatesGet({ active, lastActivity, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/delegates${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"active\", active),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastActivity\", lastActivity),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegates count\n */ function delegatesGetCount({ active } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/delegates/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"active\", active)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegate by address\n */ function delegatesGetByAddress(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/delegates/${encodeURIComponent(address)}`, {\n        ...opts\n    }));\n}\n/**\n * Get domains count\n */ function domainsGetCount({ id, level, name, owner, address, reverse, expiration, data, firstLevel, firstTime, lastLevel, lastTime } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/domains/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"name\", name),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"owner\", owner),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"reverse\", reverse),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"expiration\", expiration),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"data\", data),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get domains\n */ function domainsGet({ id, level, name, owner, address, reverse, expiration, data, firstLevel, firstTime, lastLevel, lastTime, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/domains${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"name\", name),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"owner\", owner),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"reverse\", reverse),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"expiration\", expiration),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"data\", data),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get domain by name\n */ function domainsGetByName(name, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/domains/${encodeURIComponent(name)}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract events count\n */ function eventsGetContractEventsCount({ id, level, timestamp, contract, codeHash, tag, payload, transactionId } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/events/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"codeHash\", codeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tag\", tag),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"payload\", payload),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"transactionId\", transactionId)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get contract events\n */ function eventsGetContractEvents({ id, level, timestamp, contract, codeHash, tag, payload, transactionId, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/contracts/events${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"codeHash\", codeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tag\", tag),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"payload\", payload),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"transactionId\", transactionId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get indexer head\n */ function headGet(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/head\", {\n        ...opts\n    }));\n}\n/**\n * Inject operation\n */ function helpersPostInject(body, { $async } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/helpers/inject${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        async: $async\n    }))}`, oazapfts.json({\n        ...opts,\n        method: \"POST\",\n        body\n    })));\n}\n/**\n * Run script view\n */ function helpersPostRunScriptView(contract, name, body, opts) {\n    return oazapfts.ok(oazapfts.fetchBlob(`/v1/helpers/view/${encodeURIComponent(contract)}/${encodeURIComponent(name)}`, oazapfts.json({\n        ...opts,\n        method: \"POST\",\n        body\n    })));\n}\n/**\n * Get operations by hash\n */ function operationsGetByHash(hash, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get operations by hash and counter\n */ function operationsGetByHashCounter(hash, counter, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/${encodeURIComponent(hash)}/${encodeURIComponent(counter)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get operations by hash, counter and nonce\n */ function operationsGetByHashCounterNonce(hash, counter, nonce, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/${encodeURIComponent(hash)}/${encodeURIComponent(counter)}/${encodeURIComponent(nonce)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get operation status\n */ function operationsGetStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsements\n */ function operationsGetEndorsements({ delegate, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsements${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsement by hash\n */ function operationsGetEndorsementByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsements/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsements count\n */ function operationsGetEndorsementsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsements/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get preendorsements\n */ function operationsGetPreendorsements({ delegate, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/preendorsements${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get preendorsement by hash\n */ function operationsGetPreendorsementByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/preendorsements/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get preendorsements count\n */ function operationsGetPreendorsementsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/preendorsements/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get ballots\n */ function operationsGetBallots({ delegate, level, timestamp, epoch, period, proposal, vote, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/ballots${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"epoch\", epoch),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"period\", period),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"proposal\", proposal),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"vote\", vote),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get ballot by hash\n */ function operationsGetBallotByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/ballots/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get ballots count\n */ function operationsGetBallotsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/ballots/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get proposals\n */ function operationsGetProposals({ delegate, level, timestamp, epoch, period, proposal, duplicated, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/proposals${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"epoch\", epoch),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"period\", period),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"proposal\", proposal),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"duplicated\", duplicated),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get proposal by hash\n */ function operationsGetProposalByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/proposals/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get proposals count\n */ function operationsGetProposalsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/proposals/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get activations\n */ function operationsGetActivations({ account, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/activations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"account\", account),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get activation by hash\n */ function operationsGetActivationByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/activations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get activations count\n */ function operationsGetActivationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/activations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double baking\n */ function operationsGetDoubleBaking({ anyof, accuser, offender, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_baking${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"accuser\", accuser),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offender\", offender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double baking by hash\n */ function operationsGetDoubleBakingByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_baking/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double baking count\n */ function operationsGetDoubleBakingCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_baking/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double endorsing\n */ function operationsGetDoubleEndorsing({ anyof, accuser, offender, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_endorsing${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"accuser\", accuser),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offender\", offender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double endorsing by hash\n */ function operationsGetDoubleEndorsingByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_endorsing/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double endorsing count\n */ function operationsGetDoubleEndorsingCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_endorsing/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double preendorsing\n */ function operationsGetDoublePreendorsing({ anyof, accuser, offender, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_preendorsing${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"accuser\", accuser),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offender\", offender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double preendorsing by hash\n */ function operationsGetDoublePreendorsingByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_preendorsing/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get double preendorsing count\n */ function operationsGetDoublePreendorsingCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/double_preendorsing/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get nonce revelations\n */ function operationsGetNonceRevelations({ anyof, baker, sender, level, revealedCycle, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/nonce_revelations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"revealedCycle\", revealedCycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get nonce revelation by hash\n */ function operationsGetNonceRevelationByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/nonce_revelations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get nonce revelations count\n */ function operationsGetNonceRevelationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/nonce_revelations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get vdf revelations\n */ function operationsGetVdfRevelations({ baker, level, cycle, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/vdf_revelations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get vdf revelation by hash\n */ function operationsGetVdfRevelationByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/vdf_revelations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get vdf revelations count\n */ function operationsGetVdfRevelationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/vdf_revelations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get drain delegate\n */ function operationsGetDrainDelegateOps({ anyof, delegate, target, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/drain_delegate${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"delegate\", delegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"target\", target),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get drain delegate by hash\n */ function operationsGetDrainDelegateByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/drain_delegate/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get drain delegate count\n */ function operationsGetDrainDelegateOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/drain_delegate/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegations\n */ function operationsGetDelegations({ anyof, initiator, sender, prevDelegate, newDelegate, level, timestamp, senderCodeHash, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/delegations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"initiator\", initiator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"prevDelegate\", prevDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"newDelegate\", newDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"senderCodeHash\", senderCodeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegation by hash\n */ function operationsGetDelegationByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/delegations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegation status\n */ function operationsGetDelegationStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/delegations/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get delegations count\n */ function operationsGetDelegationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/delegations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get originations\n */ function operationsGetOriginations({ anyof, initiator, sender, contractManager, contractDelegate, originatedContract, id, typeHash, codeHash, level, timestamp, senderCodeHash, anyCodeHash, status, select, sort, offset, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/originations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"initiator\", initiator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contractManager\", contractManager),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contractDelegate\", contractDelegate),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"originatedContract\", originatedContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"typeHash\", typeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"codeHash\", codeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"senderCodeHash\", senderCodeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"anyCodeHash\", anyCodeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get origination by hash\n */ function operationsGetOriginationByHash(hash, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/originations/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get origination status\n */ function operationsGetOriginationStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/originations/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get originations count\n */ function operationsGetOriginationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/originations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transactions\n */ function operationsGetTransactions({ anyof, initiator, sender, target, amount, id, level, timestamp, senderCodeHash, targetCodeHash, codeHash, entrypoint, parameter, hasInternals, status, select, sort, offset, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"initiator\", initiator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"target\", target),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"amount\", amount),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"senderCodeHash\", senderCodeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"targetCodeHash\", targetCodeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"codeHash\", codeHash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"entrypoint\", entrypoint),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"parameter\", parameter),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"hasInternals\", hasInternals),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transaction by hash\n */ function operationsGetTransactionByHash(hash, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transaction by hash and counter\n */ function operationsGetTransactionByHashCounter(hash, counter, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions/${encodeURIComponent(hash)}/${encodeURIComponent(counter)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transaction by hash, counter and nonce\n */ function operationsGetTransactionByHashCounterNonce(hash, counter, nonce, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions/${encodeURIComponent(hash)}/${encodeURIComponent(counter)}/${encodeURIComponent(nonce)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transaction status\n */ function operationsGetTransactionStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get transactions count\n */ function operationsGetTransactionsCount({ anyof, initiator, sender, target, amount, level, timestamp, entrypoint, parameter, status } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transactions/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"initiator\", initiator),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"target\", target),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"amount\", amount),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"entrypoint\", entrypoint),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"parameter\", parameter),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get reveals\n */ function operationsGetReveals({ sender, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/reveals${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get reveal by hash\n */ function operationsGetRevealByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/reveals/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get reveal status\n */ function operationsGetRevealStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/reveals/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get reveals count\n */ function operationsGetRevealsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/reveals/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get register constants\n */ function operationsGetRegisterConstants({ sender, address, level, timestamp, status, select, sort, offset, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/register_constants${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"address\", address),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get register constant by hash\n */ function operationsGetRegisterConstantByHash(hash, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/register_constants/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get register constant status\n */ function operationsGetRegisterConstantStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/register_constants/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get register constants count\n */ function operationsGetRegisterConstantsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/register_constants/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get set deposits limits\n */ function operationsGetSetDepositsLimits({ sender, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/set_deposits_limits${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get set deposits limit by hash\n */ function operationsGetSetDepositsLimitByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/set_deposits_limits/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get set deposits limit status\n */ function operationsGetSetDepositsLimitStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/set_deposits_limits/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get set deposits limits count\n */ function operationsGetSetDepositsLimitsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/set_deposits_limits/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transfer ticket\n */ function operationsGetTransferTicketOps({ anyof, sender, target, ticketer, level, timestamp, status, select, sort, offset, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transfer_ticket${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"target\", target),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"ticketer\", ticketer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transfer ticket by hash\n */ function operationsGetTransferTicketOpsByHash(hash, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transfer_ticket/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get transfer ticket status\n */ function operationsGetTransferTicketStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transfer_ticket/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get transfer ticket count\n */ function operationsGetTransferTicketOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/transfer_ticket/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup commit\n */ function operationsGetTxRollupCommitOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_commit${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup commit by hash\n */ function operationsGetTxRollupCommitOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_commit/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup commit status\n */ function operationsGetTxRollupCommitStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_commit/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup commit count\n */ function operationsGetTxRollupCommitOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_commit/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup dispatch tickets\n */ function operationsGetTxRollupDispatchTicketsOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_dispatch_tickets${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup dispatch tickets by hash\n */ function operationsGetTxRollupDispatchTicketsOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_dispatch_tickets/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup dispatch tickets status\n */ function operationsGetTxRollupDispatchTicketsStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_dispatch_tickets/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup dispatch tickets count\n */ function operationsGetTxRollupDispatchTicketsOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_dispatch_tickets/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup finalize commitment\n */ function operationsGetTxRollupFinalizeCommitmentOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_finalize_commitment${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup finalize commitment by hash\n */ function operationsGetTxRollupFinalizeCommitmentOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_finalize_commitment/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup finalize commitment status\n */ function operationsGetTxRollupFinalizeCommitmentStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_finalize_commitment/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup finalize commitment count\n */ function operationsGetTxRollupFinalizeCommitmentOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_finalize_commitment/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup origination\n */ function operationsGetTxRollupOriginationOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_origination${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup origination by hash\n */ function operationsGetTxRollupOriginationOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_origination/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup origination status\n */ function operationsGetTxRollupOriginationStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_origination/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup origination count\n */ function operationsGetTxRollupOriginationOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_origination/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup rejection\n */ function operationsGetTxRollupRejectionOps({ anyof, sender, committer, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_rejection${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"committer\", committer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup rejection by hash\n */ function operationsGetTxRollupRejectionOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_rejection/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup rejection status\n */ function operationsGetTxRollupRejectionStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_rejection/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup rejection count\n */ function operationsGetTxRollupRejectionOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_rejection/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup remove commitment\n */ function operationsGetTxRollupRemoveCommitmentOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_remove_commitment${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup remove commitment by hash\n */ function operationsGetTxRollupRemoveCommitmentOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_remove_commitment/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup remove commitment status\n */ function operationsGetTxRollupRemoveCommitmentStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_remove_commitment/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup remove commitment count\n */ function operationsGetTxRollupRemoveCommitmentOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_remove_commitment/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup return bond\n */ function operationsGetTxRollupReturnBondOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_return_bond${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup return bond by hash\n */ function operationsGetTxRollupReturnBondOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_return_bond/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup return bond status\n */ function operationsGetTxRollupReturnBondStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_return_bond/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup return bond count\n */ function operationsGetTxRollupReturnBondOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_return_bond/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup submit batch\n */ function operationsGetTxRollupSubmitBatchOps({ sender, rollup, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_submit_batch${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"rollup\", rollup),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup submit batch by hash\n */ function operationsGetTxRollupSubmitBatchOpsByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_submit_batch/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup submit batch status\n */ function operationsGetTxRollupSubmitBatchStatus(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_submit_batch/${encodeURIComponent(hash)}/status`, {\n        ...opts\n    }));\n}\n/**\n * Get tx rollup submit batch count\n */ function operationsGetTxRollupSubmitBatchOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/tx_rollup_submit_batch/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get increase paid storage\n */ function operationsGetIncreasePaidStorageOps({ sender, contract, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/increase_paid_storage${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get increase paid storage by hash\n */ function operationsGetIncreasePaidStorageByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/increase_paid_storage/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get increase paid storage count\n */ function operationsGetIncreasePaidStorageCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/increase_paid_storage/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get update consensus key\n */ function operationsGetUpdateConsensusKeyOps({ sender, activationCycle, level, timestamp, status, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/update_consensus_key${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sender\", sender),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"activationCycle\", activationCycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get update consensus key by hash\n */ function operationsGetUpdateConsensusKeyByHash(hash, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/update_consensus_key/${encodeURIComponent(hash)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get update consensus key count\n */ function operationsGetUpdateConsensusKeyOpsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/update_consensus_key/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get migrations\n */ function operationsGetMigrations({ account, kind, balanceChange, id, level, timestamp, select, sort, offset, limit, micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/migrations${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        micheline,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"account\", account),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"kind\", kind),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balanceChange\", balanceChange),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get migration by id\n */ function operationsGetMigrationById(id, { micheline, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/migrations/${encodeURIComponent(id)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        micheline,\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get migrations count\n */ function operationsGetMigrationsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/migrations/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get revelation penalties\n */ function operationsGetRevelationPenalties({ baker, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/revelation_penalties${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get revelation penalty by id\n */ function operationsGetRevelationPenaltyById(id, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/revelation_penalties/${encodeURIComponent(id)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get revelation penalties count\n */ function operationsGetRevelationPenaltiesCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/revelation_penalties/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baking\n */ function operationsGetBaking({ baker, anyof, proposer, producer, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/baking${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"proposer\", proposer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"producer\", producer),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baking by id\n */ function operationsGetBakingById(id, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/baking/${encodeURIComponent(id)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baking count\n */ function operationsGetBakingCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/baking/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsing rewards\n */ function operationsGetEndorsingRewards({ baker, level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsing_rewards${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsing reward by id\n */ function operationsGetEndorsingRewardById(id, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsing_rewards/${encodeURIComponent(id)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get endorsing rewards count\n */ function operationsGetEndorsingRewardsCount({ level, timestamp } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/operations/endorsing_rewards/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get protocols count\n */ function protocolsGetCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/protocols/count\", {\n        ...opts\n    }));\n}\n/**\n * Get protocols\n */ function protocolsGet({ sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/protocols${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get current protocol\n */ function protocolsGetCurrent(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/protocols/current\", {\n        ...opts\n    }));\n}\n/**\n * Get protocol by code\n */ function protocolsGetByCode(code, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/protocols/${encodeURIComponent(code)}`, {\n        ...opts\n    }));\n}\n/**\n * Get protocol by hash\n */ function protocolsGetByHash(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/protocols/${encodeURIComponent(hash)}`, {\n        ...opts\n    }));\n}\n/**\n * Get protocol by cycle\n */ function protocolsGetByCycle(cycle, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/protocols/cycles/${encodeURIComponent(cycle)}`, {\n        ...opts\n    }));\n}\n/**\n * Get quotes count\n */ function quotesGetCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/quotes/count\", {\n        ...opts\n    }));\n}\n/**\n * Get last quote\n */ function quotesGetLast(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/quotes/last\", {\n        ...opts\n    }));\n}\n/**\n * Get quotes\n */ function quotesGet({ level, timestamp, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/quotes${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baker cycle rewards count\n */ function rewardsGetBakerRewardsCount(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/bakers/${encodeURIComponent(address)}/count`, {\n        ...opts\n    }));\n}\n/**\n * Get baker cycle rewards\n */ function rewardsGetBakerRewards(address, { cycle, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/bakers/${encodeURIComponent(address)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baker cycle rewards by cycle\n */ function rewardsGetBakerRewardsByCycle(address, cycle, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/bakers/${encodeURIComponent(address)}/${encodeURIComponent(cycle)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegator cycle rewards count\n */ function rewardsGetDelegatorRewardsCount(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/delegators/${encodeURIComponent(address)}/count`, {\n        ...opts\n    }));\n}\n/**\n * Get delegator cycle rewards\n */ function rewardsGetDelegatorRewards(address, { cycle, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/delegators/${encodeURIComponent(address)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get delegator cycle rewards by cycle\n */ function rewardsGetDelegatorRewardsByCycle(address, cycle, { quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/delegators/${encodeURIComponent(address)}/${encodeURIComponent(cycle)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get reward split\n */ function rewardsGetRewardSplit(baker, cycle, { offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/split/${encodeURIComponent(baker)}/${encodeURIComponent(cycle)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        offset,\n        limit\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get reward split delegator\n */ function rewardsGetRewardSplitDelegator(baker, cycle, delegator, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rewards/split/${encodeURIComponent(baker)}/${encodeURIComponent(cycle)}/${encodeURIComponent(delegator)}`, {\n        ...opts\n    }));\n}\n/**\n * Get rights count\n */ function rightsGetCount({ $type, baker, cycle, level, slots, round, priority, status } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rights/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"type\", $type),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"slots\", slots),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"round\", round),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"priority\", priority),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get rights\n */ function rightsGet({ $type, baker, cycle, level, slots, round, priority, status, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/rights${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"type\", $type),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"baker\", baker),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"slots\", slots),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"round\", round),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"priority\", priority),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get baker software\n */ function softwareGet({ select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/software${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get software count\n */ function softwareGetCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/software/count\", {\n        ...opts\n    }));\n}\n/**\n * Get statistics\n */ function statisticsGet({ level, timestamp, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/statistics${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get daily statistics\n */ function statisticsGetDaily({ date, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/statistics/daily${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"date\", date),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get cyclic statistics\n */ function statisticsGetCyclesAll({ cycle, select, sort, offset, limit, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/statistics/cyclic${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"cycle\", cycle),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get current statistics\n */ function statisticsGetCycles({ select, quote } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/statistics/current${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        quote,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tokens count\n */ function tokensGetTokensCount({ id, contract, tokenId, standard, firstMinter, firstLevel, firstTime, lastLevel, lastTime, metadata, indexedAt } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tokenId\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"standard\", standard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstMinter\", firstMinter),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"metadata\", metadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get tokens\n */ function tokensGetTokens({ id, contract, tokenId, standard, firstMinter, firstLevel, firstTime, lastLevel, lastTime, metadata, indexedAt, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"contract\", contract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"tokenId\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"standard\", standard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstMinter\", firstMinter),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"metadata\", metadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get token balances count\n */ function tokensGetTokenBalancesCount({ id, account, tokenId, tokenContract, tokenTokenId, tokenStandard, tokenMetadata, tokenHasFilters, balance, firstLevel, firstTime, lastLevel, lastTime, indexedAt } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/balances/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        \"token.HasFilters\": tokenHasFilters,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"account\", account),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.id\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.contract\", tokenContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.tokenId\", tokenTokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.standard\", tokenStandard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"token.metadata\", tokenMetadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get token balances\n */ function tokensGetTokenBalances({ id, account, tokenId, tokenContract, tokenTokenId, tokenStandard, tokenMetadata, tokenHasFilters, balance, firstLevel, firstTime, lastLevel, lastTime, indexedAt, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/balances${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        \"token.HasFilters\": tokenHasFilters,\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"account\", account),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.id\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.contract\", tokenContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.tokenId\", tokenTokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.standard\", tokenStandard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"token.metadata\", tokenMetadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstLevel\", firstLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"firstTime\", firstTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastLevel\", lastLevel),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"lastTime\", lastTime),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get token transfers count\n */ function tokensGetTokenTransfersCount({ id, level, timestamp, tokenId, tokenContract, tokenTokenId, tokenStandard, tokenMetadata, tokenHasFilters, anyof, $from, to, amount, transactionId, originationId, migrationId, indexedAt } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/transfers/count${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        \"token.HasFilters\": tokenHasFilters,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.id\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.contract\", tokenContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.tokenId\", tokenTokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.standard\", tokenStandard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"token.metadata\", tokenMetadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"from\", $from),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"to\", to),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"amount\", amount),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"transactionId\", transactionId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"originationId\", originationId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"migrationId\", migrationId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get token transfers\n */ function tokensGetTokenTransfers({ id, level, timestamp, tokenId, tokenContract, tokenTokenId, tokenStandard, tokenMetadata, tokenHasFilters, anyof, $from, to, amount, transactionId, originationId, migrationId, indexedAt, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/transfers${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        \"token.HasFilters\": tokenHasFilters,\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"id\", id),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"level\", level),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"timestamp\", timestamp),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.id\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.contract\", tokenContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.tokenId\", tokenTokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.standard\", tokenStandard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"token.metadata\", tokenMetadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].anyofParameter(\"anyof\", anyof),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"from\", $from),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"to\", to),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"amount\", amount),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"transactionId\", transactionId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"originationId\", originationId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"migrationId\", migrationId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"indexedAt\", indexedAt),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get historical token balances\n */ function tokensGetTokenBalances2(level, { account, tokenId, tokenContract, tokenTokenId, tokenStandard, tokenMetadata, tokenHasFilters, balance, sort, offset, limit, select } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/tokens/historical_balances/${encodeURIComponent(level)}${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        \"token.HasFilters\": tokenHasFilters,\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"account\", account),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.id\", tokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.contract\", tokenContract),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.tokenId\", tokenTokenId),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"token.standard\", tokenStandard),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].jsonParameter(\"token.metadata\", tokenMetadata),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"balance\", balance),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get proposals count\n */ function votingGetProposalsCount(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/voting/proposals/count\", {\n        ...opts\n    }));\n}\n/**\n * Get proposals\n */ function votingGetProposals({ hash, epoch, select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/proposals${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"hash\", hash),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"epoch\", epoch),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get proposal by hash\n */ function votingGetProposalByHash(hash, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/proposals/${encodeURIComponent(hash)}`, {\n        ...opts\n    }));\n}\n/**\n * Get voting periods\n */ function votingGetPeriods({ select, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"select\", select),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get voting period by index\n */ function votingGetPeriod(index, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods/${encodeURIComponent(index)}`, {\n        ...opts\n    }));\n}\n/**\n * Get current voting period\n */ function votingGetCurrentPeriod(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/voting/periods/current\", {\n        ...opts\n    }));\n}\n/**\n * Get period voters\n */ function votingGetPeriodVoters(index, { status, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods/${encodeURIComponent(index)}/voters${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get period voter\n */ function votingGetPeriodVoter(index, address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods/${encodeURIComponent(index)}/voters/${encodeURIComponent(address)}`, {\n        ...opts\n    }));\n}\n/**\n * Get current period voters\n */ function votingGetPeriodVoters2({ status, sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods/current/voters${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"status\", status),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get current period voter\n */ function votingGetPeriodVoter2(address, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/periods/current/voters/${encodeURIComponent(address)}`, {\n        ...opts\n    }));\n}\n/**\n * Get voting epochs\n */ function votingGetEpochs({ sort, offset, limit } = {}, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/epochs${_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.query(_tzkt_oazapfts_runtime_query__WEBPACK_IMPORTED_MODULE_1__.explode({\n        limit,\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"sort\", sort),\n        ..._queryParamParsers__WEBPACK_IMPORTED_MODULE_2__[\"default\"].queryParameter(\"offset\", offset)\n    }))}`, {\n        ...opts\n    }));\n}\n/**\n * Get voting epoch by index\n */ function votingGetEpoch(index, opts) {\n    return oazapfts.ok(oazapfts.fetchJson(`/v1/voting/epochs/${encodeURIComponent(index)}`, {\n        ...opts\n    }));\n}\n/**\n * Get current voting epoch\n */ function votingGetCurrentEpoch(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/voting/epochs/current\", {\n        ...opts\n    }));\n}\n/**\n * Get latest voting\n */ function votingGetLatestVoting(opts) {\n    return oazapfts.ok(oazapfts.fetchJson(\"/v1/voting/epochs/latest_voting\", {\n        ...opts\n    }));\n} //# sourceMappingURL=data:application/json;base64,\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/sdk-api/build/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tzkt/sdk-api/build/module/queryParamParsers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tzkt/sdk-api/build/module/queryParamParsers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst jsonParameter = (paramName, p)=>{\n    if (!p) return {};\n    const mainParamsObj = {};\n    Object.entries(p).forEach(([k, v])=>{\n        if (!(v instanceof Object)) {\n            throw new Error(`Expected ${paramName} value to be object, received ${typeof v}`);\n        }\n        const { jsonPath, jsonValue } = v;\n        if (jsonValue === undefined || jsonValue === null) throw new Error(`Expected jsonValue in ${paramName} -> ${k}, found: ${jsonValue}`);\n        // k is top eq, ne, in, etc.\n        const parameterPathParts = [\n            paramName,\n            jsonPath,\n            k\n        ];\n        const parameterPath = parameterPathParts.filter((p)=>p !== undefined).join(\".\");\n        mainParamsObj[parameterPath] = jsonValue;\n    });\n    return mainParamsObj;\n};\nconst anyofParameter = (paramName, p)=>{\n    if (!p) return {};\n    const { fields } = p;\n    const validateFields = (fields)=>{\n        if (!Array.isArray(fields)) {\n            throw new Error(`Expected ${paramName} fields to be Array. Received ${typeof fields}.`);\n        }\n        fields.forEach((f)=>{\n            if (typeof f === \"string\") return;\n            throw new Error(`Expected ${paramName} fields to be strings. Received ${typeof f}`);\n        });\n        return true;\n    };\n    // never really returns but oh well\n    if (!validateFields(fields)) return {};\n    const mainParamsObj = {};\n    const anyof = fields.join(\".\");\n    if (p.value) {\n        const prefixedKey = `${paramName}.${anyof}`;\n        mainParamsObj[prefixedKey] = p.value;\n    }\n    for (const param of [\n        \"in\",\n        \"eq\",\n        \"null\"\n    ]){\n        if (p[param]) {\n            const prefixedKey = `${paramName}.${anyof}.${param}`;\n            mainParamsObj[prefixedKey] = Array.isArray(p[param]) ? p[param].join(\",\") : p[param];\n            return mainParamsObj;\n        }\n    }\n    return mainParamsObj;\n};\nconst queryParameter = (paramName, p)=>{\n    if (!p) return {};\n    const mainParamsObj = {};\n    Object.entries(p).forEach(([k, v])=>{\n        const key = `${paramName}.${k}`;\n        mainParamsObj[key] = v;\n    });\n    return mainParamsObj;\n};\nconst parsers = {\n    jsonParameter,\n    queryParameter,\n    anyofParameter\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parsers); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnlQYXJhbVBhcnNlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVlcnlQYXJhbVBhcnNlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxhQUFhLEdBQXFCLENBQUMsU0FBUyxFQUFFLENBQUUsRUFBRSxFQUFFO0lBQ3hELElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFFbEIsTUFBTSxhQUFhLEdBQTJCLEVBQUUsQ0FBQztJQUVqRCxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsSUFBSSxDQUFDLENBQUMsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLE1BQU0sSUFBSSxLQUFLLENBQ2IsWUFBWSxTQUFTLGlDQUFpQyxPQUFPLENBQUMsRUFBRSxDQUNqRSxDQUFDO1NBQ0g7UUFFRCxNQUFNLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNsQyxJQUFJLFNBQVMsS0FBSyxTQUFTLElBQUksU0FBUyxLQUFLLElBQUk7WUFDL0MsTUFBTSxJQUFJLEtBQUssQ0FDYix5QkFBeUIsU0FBUyxPQUFPLENBQUMsWUFBWSxTQUFTLEVBQUUsQ0FDbEUsQ0FBQztRQUVKLDRCQUE0QjtRQUM1QixNQUFNLGtCQUFrQixHQUFHLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVwRCxNQUFNLGFBQWEsR0FBRyxrQkFBa0I7YUFDckMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssU0FBUyxDQUFDO2FBQzlCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNiLGFBQWEsQ0FBQyxhQUFhLENBQUMsR0FBRyxTQUFTLENBQUM7SUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLGFBQWEsQ0FBQztBQUN2QixDQUFDLENBQUM7QUFFRixNQUFNLGNBQWMsR0FBcUIsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLEVBQUU7SUFDeEQsSUFBSSxDQUFDLENBQUM7UUFBRSxPQUFPLEVBQUUsQ0FBQztJQUVsQixNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRXJCLE1BQU0sY0FBYyxHQUFHLENBQUMsTUFBZSxFQUFzQixFQUFFO1FBQzdELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLE1BQU0sSUFBSSxLQUFLLENBQ2IsWUFBWSxTQUFTLGlDQUFpQyxPQUFPLE1BQU0sR0FBRyxDQUN2RSxDQUFDO1NBQ0g7UUFFRCxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDbkIsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRO2dCQUFFLE9BQU87WUFDbEMsTUFBTSxJQUFJLEtBQUssQ0FDYixZQUFZLFNBQVMsbUNBQW1DLE9BQU8sQ0FBQyxFQUFFLENBQ25FLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxDQUFDO0lBRUYsbUNBQW1DO0lBQ25DLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFFdkMsTUFBTSxhQUFhLEdBQTRCLEVBQUUsQ0FBQztJQUVsRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRS9CLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRTtRQUNYLE1BQU0sV0FBVyxHQUFHLEdBQUcsU0FBUyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQzVDLGFBQWEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO0tBQ3RDO0lBRUQsS0FBSyxNQUFNLEtBQUssSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDeEMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDWixNQUFNLFdBQVcsR0FBRyxHQUFHLFNBQVMsSUFBSSxLQUFLLElBQUksS0FBSyxFQUFFLENBQUM7WUFDckQsYUFBYSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNsRCxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQ3BCLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDYixPQUFPLGFBQWEsQ0FBQztTQUN0QjtLQUNGO0lBRUQsT0FBTyxhQUFhLENBQUM7QUFDdkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxjQUFjLEdBQXFCLENBQUMsU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFO0lBQ3hELElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFFbEIsTUFBTSxhQUFhLEdBQTRCLEVBQUUsQ0FBQztJQUVsRCxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsTUFBTSxHQUFHLEdBQUcsR0FBRyxTQUFTLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDaEMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sYUFBYSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFxQztJQUNoRCxhQUFhO0lBQ2IsY0FBYztJQUNkLGNBQWM7Q0FDZixDQUFDO0FBRUYsZUFBZSxPQUFPLENBQUMifQ==\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tzkt/sdk-api/build/module/queryParamParsers.js\n");

/***/ })

};
;