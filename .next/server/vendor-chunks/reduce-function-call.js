"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reduce-function-call";
exports.ids = ["vendor-chunks/reduce-function-call"];
exports.modules = {

/***/ "(ssr)/./node_modules/reduce-function-call/index.js":
/*!****************************************************!*\
  !*** ./node_modules/reduce-function-call/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Module dependencies\n */ \nvar balanced = __webpack_require__(/*! balanced-match */ \"(ssr)/./node_modules/balanced-match/index.js\");\n/**\n * Expose `reduceFunctionCall`\n *\n * @type {Function}\n */ module.exports = reduceFunctionCall;\n/**\n * Walkthrough all expressions, evaluate them and insert them into the declaration\n *\n * @param {Array} expressions\n * @param {Object} declaration\n */ function reduceFunctionCall(string, functionRE, callback) {\n    var call = string;\n    return getFunctionCalls(string, functionRE).reduce(function(string, obj) {\n        return string.replace(obj.functionIdentifier + \"(\" + obj.matches.body + \")\", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE));\n    }, string);\n}\n/**\n * Parses expressions in a value\n *\n * @param {String} value\n * @returns {Array}\n * @api private\n */ function getFunctionCalls(call, functionRE) {\n    var expressions = [];\n    var fnRE = typeof functionRE === \"string\" ? new RegExp(\"\\\\b(\" + functionRE + \")\\\\(\") : functionRE;\n    do {\n        var searchMatch = fnRE.exec(call);\n        if (!searchMatch) {\n            return expressions;\n        }\n        if (searchMatch[1] === undefined) {\n            throw new Error(\"Missing the first couple of parenthesis to get the function identifier in \" + functionRE);\n        }\n        var fn = searchMatch[1];\n        var startIndex = searchMatch.index;\n        var matches = balanced(\"(\", \")\", call.substring(startIndex));\n        if (!matches || matches.start !== searchMatch[0].length - 1) {\n            throw new SyntaxError(fn + \"(): missing closing ')' in the value '\" + call + \"'\");\n        }\n        expressions.push({\n            matches: matches,\n            functionIdentifier: fn\n        });\n        call = matches.post;\n    }while (fnRE.test(call));\n    return expressions;\n}\n/**\n * Evaluates an expression\n *\n * @param {String} expression\n * @returns {String}\n * @api private\n */ function evalFunctionCall(string, functionIdentifier, callback, call, functionRE) {\n    // allow recursivity\n    return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVkdWNlLWZ1bmN0aW9uLWNhbGwvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7O0NBRUM7QUFDRCxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyxvRUFBZ0I7QUFFdkM7Ozs7Q0FJQyxHQUNEQyxPQUFPQyxPQUFPLEdBQUdDO0FBRWpCOzs7OztDQUtDLEdBRUQsU0FBU0EsbUJBQW1CQyxNQUFNLEVBQUVDLFVBQVUsRUFBRUMsUUFBUTtJQUN0RCxJQUFJQyxPQUFPSDtJQUNYLE9BQU9JLGlCQUFpQkosUUFBUUMsWUFBWUksTUFBTSxDQUFDLFNBQVNMLE1BQU0sRUFBRU0sR0FBRztRQUNyRSxPQUFPTixPQUFPTyxPQUFPLENBQUNELElBQUlFLGtCQUFrQixHQUFHLE1BQU1GLElBQUlHLE9BQU8sQ0FBQ0MsSUFBSSxHQUFHLEtBQUtDLGlCQUFpQkwsSUFBSUcsT0FBTyxDQUFDQyxJQUFJLEVBQUVKLElBQUlFLGtCQUFrQixFQUFFTixVQUFVQyxNQUFNRjtJQUMxSixHQUFHRDtBQUNMO0FBRUE7Ozs7OztDQU1DLEdBRUQsU0FBU0ksaUJBQWlCRCxJQUFJLEVBQUVGLFVBQVU7SUFDeEMsSUFBSVcsY0FBYyxFQUFFO0lBRXBCLElBQUlDLE9BQU8sT0FBT1osZUFBZSxXQUFXLElBQUlhLE9BQU8sU0FBU2IsYUFBYSxVQUFVQTtJQUN2RixHQUFHO1FBQ0QsSUFBSWMsY0FBY0YsS0FBS0csSUFBSSxDQUFDYjtRQUM1QixJQUFJLENBQUNZLGFBQWE7WUFDaEIsT0FBT0g7UUFDVDtRQUNBLElBQUlHLFdBQVcsQ0FBQyxFQUFFLEtBQUtFLFdBQVc7WUFDaEMsTUFBTSxJQUFJQyxNQUFNLCtFQUErRWpCO1FBQ2pHO1FBQ0EsSUFBSWtCLEtBQUtKLFdBQVcsQ0FBQyxFQUFFO1FBQ3ZCLElBQUlLLGFBQWFMLFlBQVlNLEtBQUs7UUFDbEMsSUFBSVosVUFBVWQsU0FBUyxLQUFLLEtBQUtRLEtBQUttQixTQUFTLENBQUNGO1FBRWhELElBQUksQ0FBQ1gsV0FBV0EsUUFBUWMsS0FBSyxLQUFLUixXQUFXLENBQUMsRUFBRSxDQUFDUyxNQUFNLEdBQUcsR0FBRztZQUMzRCxNQUFNLElBQUlDLFlBQVlOLEtBQUssMkNBQTJDaEIsT0FBTztRQUMvRTtRQUVBUyxZQUFZYyxJQUFJLENBQUM7WUFBQ2pCLFNBQVNBO1lBQVNELG9CQUFvQlc7UUFBRTtRQUMxRGhCLE9BQU9NLFFBQVFrQixJQUFJO0lBQ3JCLFFBQ09kLEtBQUtlLElBQUksQ0FBQ3pCLE9BQU07SUFFdkIsT0FBT1M7QUFDVDtBQUVBOzs7Ozs7Q0FNQyxHQUVELFNBQVNELGlCQUFrQlgsTUFBTSxFQUFFUSxrQkFBa0IsRUFBRU4sUUFBUSxFQUFFQyxJQUFJLEVBQUVGLFVBQVU7SUFDL0Usb0JBQW9CO0lBQ3BCLE9BQU9DLFNBQVNILG1CQUFtQkMsUUFBUUMsWUFBWUMsV0FBV00sb0JBQW9CTDtBQUN4RiIsInNvdXJjZXMiOlsid2VicGFjazovL3B3cnBlcmtzLy4vbm9kZV9tb2R1bGVzL3JlZHVjZS1mdW5jdGlvbi1jYWxsL2luZGV4LmpzPzg4ODEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXNcbiAqL1xudmFyIGJhbGFuY2VkID0gcmVxdWlyZShcImJhbGFuY2VkLW1hdGNoXCIpXG5cbi8qKlxuICogRXhwb3NlIGByZWR1Y2VGdW5jdGlvbkNhbGxgXG4gKlxuICogQHR5cGUge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHJlZHVjZUZ1bmN0aW9uQ2FsbFxuXG4vKipcbiAqIFdhbGt0aHJvdWdoIGFsbCBleHByZXNzaW9ucywgZXZhbHVhdGUgdGhlbSBhbmQgaW5zZXJ0IHRoZW0gaW50byB0aGUgZGVjbGFyYXRpb25cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBleHByZXNzaW9uc1xuICogQHBhcmFtIHtPYmplY3R9IGRlY2xhcmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcmVkdWNlRnVuY3Rpb25DYWxsKHN0cmluZywgZnVuY3Rpb25SRSwgY2FsbGJhY2spIHtcbiAgdmFyIGNhbGwgPSBzdHJpbmdcbiAgcmV0dXJuIGdldEZ1bmN0aW9uQ2FsbHMoc3RyaW5nLCBmdW5jdGlvblJFKS5yZWR1Y2UoZnVuY3Rpb24oc3RyaW5nLCBvYmopIHtcbiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2Uob2JqLmZ1bmN0aW9uSWRlbnRpZmllciArIFwiKFwiICsgb2JqLm1hdGNoZXMuYm9keSArIFwiKVwiLCBldmFsRnVuY3Rpb25DYWxsKG9iai5tYXRjaGVzLmJvZHksIG9iai5mdW5jdGlvbklkZW50aWZpZXIsIGNhbGxiYWNrLCBjYWxsLCBmdW5jdGlvblJFKSlcbiAgfSwgc3RyaW5nKVxufVxuXG4vKipcbiAqIFBhcnNlcyBleHByZXNzaW9ucyBpbiBhIHZhbHVlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRGdW5jdGlvbkNhbGxzKGNhbGwsIGZ1bmN0aW9uUkUpIHtcbiAgdmFyIGV4cHJlc3Npb25zID0gW11cblxuICB2YXIgZm5SRSA9IHR5cGVvZiBmdW5jdGlvblJFID09PSBcInN0cmluZ1wiID8gbmV3IFJlZ0V4cChcIlxcXFxiKFwiICsgZnVuY3Rpb25SRSArIFwiKVxcXFwoXCIpIDogZnVuY3Rpb25SRVxuICBkbyB7XG4gICAgdmFyIHNlYXJjaE1hdGNoID0gZm5SRS5leGVjKGNhbGwpXG4gICAgaWYgKCFzZWFyY2hNYXRjaCkge1xuICAgICAgcmV0dXJuIGV4cHJlc3Npb25zXG4gICAgfVxuICAgIGlmIChzZWFyY2hNYXRjaFsxXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHRoZSBmaXJzdCBjb3VwbGUgb2YgcGFyZW50aGVzaXMgdG8gZ2V0IHRoZSBmdW5jdGlvbiBpZGVudGlmaWVyIGluIFwiICsgZnVuY3Rpb25SRSlcbiAgICB9XG4gICAgdmFyIGZuID0gc2VhcmNoTWF0Y2hbMV1cbiAgICB2YXIgc3RhcnRJbmRleCA9IHNlYXJjaE1hdGNoLmluZGV4XG4gICAgdmFyIG1hdGNoZXMgPSBiYWxhbmNlZChcIihcIiwgXCIpXCIsIGNhbGwuc3Vic3RyaW5nKHN0YXJ0SW5kZXgpKVxuXG4gICAgaWYgKCFtYXRjaGVzIHx8IG1hdGNoZXMuc3RhcnQgIT09IHNlYXJjaE1hdGNoWzBdLmxlbmd0aCAtIDEpIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihmbiArIFwiKCk6IG1pc3NpbmcgY2xvc2luZyAnKScgaW4gdGhlIHZhbHVlICdcIiArIGNhbGwgKyBcIidcIilcbiAgICB9XG5cbiAgICBleHByZXNzaW9ucy5wdXNoKHttYXRjaGVzOiBtYXRjaGVzLCBmdW5jdGlvbklkZW50aWZpZXI6IGZufSlcbiAgICBjYWxsID0gbWF0Y2hlcy5wb3N0XG4gIH1cbiAgd2hpbGUgKGZuUkUudGVzdChjYWxsKSlcblxuICByZXR1cm4gZXhwcmVzc2lvbnNcbn1cblxuLyoqXG4gKiBFdmFsdWF0ZXMgYW4gZXhwcmVzc2lvblxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHByZXNzaW9uXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZXZhbEZ1bmN0aW9uQ2FsbCAoc3RyaW5nLCBmdW5jdGlvbklkZW50aWZpZXIsIGNhbGxiYWNrLCBjYWxsLCBmdW5jdGlvblJFKSB7XG4gIC8vIGFsbG93IHJlY3Vyc2l2aXR5XG4gIHJldHVybiBjYWxsYmFjayhyZWR1Y2VGdW5jdGlvbkNhbGwoc3RyaW5nLCBmdW5jdGlvblJFLCBjYWxsYmFjayksIGZ1bmN0aW9uSWRlbnRpZmllciwgY2FsbClcbn1cbiJdLCJuYW1lcyI6WyJiYWxhbmNlZCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVkdWNlRnVuY3Rpb25DYWxsIiwic3RyaW5nIiwiZnVuY3Rpb25SRSIsImNhbGxiYWNrIiwiY2FsbCIsImdldEZ1bmN0aW9uQ2FsbHMiLCJyZWR1Y2UiLCJvYmoiLCJyZXBsYWNlIiwiZnVuY3Rpb25JZGVudGlmaWVyIiwibWF0Y2hlcyIsImJvZHkiLCJldmFsRnVuY3Rpb25DYWxsIiwiZXhwcmVzc2lvbnMiLCJmblJFIiwiUmVnRXhwIiwic2VhcmNoTWF0Y2giLCJleGVjIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJmbiIsInN0YXJ0SW5kZXgiLCJpbmRleCIsInN1YnN0cmluZyIsInN0YXJ0IiwibGVuZ3RoIiwiU3ludGF4RXJyb3IiLCJwdXNoIiwicG9zdCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/reduce-function-call/index.js\n");

/***/ })

};
;